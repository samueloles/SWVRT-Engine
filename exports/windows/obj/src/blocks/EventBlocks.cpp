// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_blocks_EventBlocks
#include <blocks/EventBlocks.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxCamera
#include <flixel/FlxCamera.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_Timer
#include <haxe/Timer.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_lime_app_Application
#include <lime/app/Application.h>
#endif
#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_lime_app_Module
#include <lime/app/Module.h>
#endif
#ifndef INCLUDED_lime_system_System
#include <lime/system/System.h>
#endif
#ifndef INCLUDED_lime_ui_Window
#include <lime/ui/Window.h>
#endif
#ifndef INCLUDED_openfl_Lib
#include <openfl/Lib.h>
#endif
#ifndef INCLUDED_openfl_display_Application
#include <openfl/display/Application.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_07980b65fb741afb_18_puedeEjecutar,"blocks.EventBlocks","puedeEjecutar",0x7c3a433e,"blocks.EventBlocks.puedeEjecutar","blocks/EventBlocks.hx",18,0x2e18b147)
HX_LOCAL_STACK_FRAME(_hx_pos_07980b65fb741afb_25_marcarEjecutado,"blocks.EventBlocks","marcarEjecutado",0x31a692fe,"blocks.EventBlocks.marcarEjecutado","blocks/EventBlocks.hx",25,0x2e18b147)
HX_LOCAL_STACK_FRAME(_hx_pos_07980b65fb741afb_175_getBloquesPorCategoria,"blocks.EventBlocks","getBloquesPorCategoria",0x478bd0f7,"blocks.EventBlocks.getBloquesPorCategoria","blocks/EventBlocks.hx",175,0x2e18b147)
HX_LOCAL_STACK_FRAME(_hx_pos_07980b65fb741afb_178_getCategorias,"blocks.EventBlocks","getCategorias",0xc80184e0,"blocks.EventBlocks.getCategorias","blocks/EventBlocks.hx",178,0x2e18b147)
HX_LOCAL_STACK_FRAME(_hx_pos_07980b65fb741afb_16_boot,"blocks.EventBlocks","boot",0xe3ab4428,"blocks.EventBlocks.boot","blocks/EventBlocks.hx",16,0x2e18b147)
HX_LOCAL_STACK_FRAME(_hx_pos_07980b65fb741afb_37_boot,"blocks.EventBlocks","boot",0xe3ab4428,"blocks.EventBlocks.boot","blocks/EventBlocks.hx",37,0x2e18b147)
HX_LOCAL_STACK_FRAME(_hx_pos_07980b65fb741afb_48_boot,"blocks.EventBlocks","boot",0xe3ab4428,"blocks.EventBlocks.boot","blocks/EventBlocks.hx",48,0x2e18b147)
HX_LOCAL_STACK_FRAME(_hx_pos_07980b65fb741afb_65_boot,"blocks.EventBlocks","boot",0xe3ab4428,"blocks.EventBlocks.boot","blocks/EventBlocks.hx",65,0x2e18b147)
HX_LOCAL_STACK_FRAME(_hx_pos_07980b65fb741afb_61_boot,"blocks.EventBlocks","boot",0xe3ab4428,"blocks.EventBlocks.boot","blocks/EventBlocks.hx",61,0x2e18b147)
HX_LOCAL_STACK_FRAME(_hx_pos_07980b65fb741afb_76_boot,"blocks.EventBlocks","boot",0xe3ab4428,"blocks.EventBlocks.boot","blocks/EventBlocks.hx",76,0x2e18b147)
HX_LOCAL_STACK_FRAME(_hx_pos_07980b65fb741afb_90_boot,"blocks.EventBlocks","boot",0xe3ab4428,"blocks.EventBlocks.boot","blocks/EventBlocks.hx",90,0x2e18b147)
HX_LOCAL_STACK_FRAME(_hx_pos_07980b65fb741afb_87_boot,"blocks.EventBlocks","boot",0xe3ab4428,"blocks.EventBlocks.boot","blocks/EventBlocks.hx",87,0x2e18b147)
HX_LOCAL_STACK_FRAME(_hx_pos_07980b65fb741afb_103_boot,"blocks.EventBlocks","boot",0xe3ab4428,"blocks.EventBlocks.boot","blocks/EventBlocks.hx",103,0x2e18b147)
HX_LOCAL_STACK_FRAME(_hx_pos_07980b65fb741afb_100_boot,"blocks.EventBlocks","boot",0xe3ab4428,"blocks.EventBlocks.boot","blocks/EventBlocks.hx",100,0x2e18b147)
HX_LOCAL_STACK_FRAME(_hx_pos_07980b65fb741afb_116_boot,"blocks.EventBlocks","boot",0xe3ab4428,"blocks.EventBlocks.boot","blocks/EventBlocks.hx",116,0x2e18b147)
HX_LOCAL_STACK_FRAME(_hx_pos_07980b65fb741afb_128_boot,"blocks.EventBlocks","boot",0xe3ab4428,"blocks.EventBlocks.boot","blocks/EventBlocks.hx",128,0x2e18b147)
HX_LOCAL_STACK_FRAME(_hx_pos_07980b65fb741afb_139_boot,"blocks.EventBlocks","boot",0xe3ab4428,"blocks.EventBlocks.boot","blocks/EventBlocks.hx",139,0x2e18b147)
HX_LOCAL_STACK_FRAME(_hx_pos_07980b65fb741afb_150_boot,"blocks.EventBlocks","boot",0xe3ab4428,"blocks.EventBlocks.boot","blocks/EventBlocks.hx",150,0x2e18b147)
HX_LOCAL_STACK_FRAME(_hx_pos_07980b65fb741afb_160_boot,"blocks.EventBlocks","boot",0xe3ab4428,"blocks.EventBlocks.boot","blocks/EventBlocks.hx",160,0x2e18b147)
HX_LOCAL_STACK_FRAME(_hx_pos_07980b65fb741afb_28_boot,"blocks.EventBlocks","boot",0xe3ab4428,"blocks.EventBlocks.boot","blocks/EventBlocks.hx",28,0x2e18b147)
namespace blocks{

void EventBlocks_obj::__construct() { }

Dynamic EventBlocks_obj::__CreateEmpty() { return new EventBlocks_obj; }

void *EventBlocks_obj::_hx_vtable = 0;

Dynamic EventBlocks_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< EventBlocks_obj > _hx_result = new EventBlocks_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool EventBlocks_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x3f92925a;
}

 ::haxe::ds::StringMap EventBlocks_obj::cooldowns;

bool EventBlocks_obj::puedeEjecutar(::String nombreBloque){
            	HX_STACKFRAME(&_hx_pos_07980b65fb741afb_18_puedeEjecutar)
HXLINE(  19)		int timer = ::lime::_hx_system::System_obj::getTimer();
HXDLIN(  19)		Float ahora;
HXDLIN(  19)		if ((timer > 0)) {
HXLINE(  19)			ahora = (( (Float)(timer) ) / ( (Float)(1000) ));
            		}
            		else {
HXLINE(  19)			ahora = ( (Float)(0) );
            		}
HXLINE(  20)		 ::Dynamic ultimaEjecucion = ::blocks::EventBlocks_obj::cooldowns->get(nombreBloque);
HXLINE(  21)		if (::hx::IsNotNull( ultimaEjecucion )) {
HXLINE(  21)			return ((ahora - ( (Float)(ultimaEjecucion) )) > ((Float)2.0));
            		}
            		else {
HXLINE(  21)			return true;
            		}
HXDLIN(  21)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(EventBlocks_obj,puedeEjecutar,return )

void EventBlocks_obj::marcarEjecutado(::String nombreBloque){
            	HX_STACKFRAME(&_hx_pos_07980b65fb741afb_25_marcarEjecutado)
HXDLIN(  25)		::Dynamic this1 = ::blocks::EventBlocks_obj::cooldowns;
HXDLIN(  25)		int timer = ::lime::_hx_system::System_obj::getTimer();
HXDLIN(  25)		Float value;
HXDLIN(  25)		if ((timer > 0)) {
HXDLIN(  25)			value = (( (Float)(timer) ) / ( (Float)(1000) ));
            		}
            		else {
HXDLIN(  25)			value = ( (Float)(0) );
            		}
HXDLIN(  25)		( ( ::haxe::ds::StringMap)(this1) )->set(nombreBloque,value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(EventBlocks_obj,marcarEjecutado,(void))

::Array< ::Dynamic> EventBlocks_obj::bloques;

::Array< ::Dynamic> EventBlocks_obj::getBloquesPorCategoria(::String cat){
            	HX_STACKFRAME(&_hx_pos_07980b65fb741afb_175_getBloquesPorCategoria)
HXDLIN( 175)		::Array< ::Dynamic> _g = ::Array_obj< ::Dynamic>::__new(0);
HXDLIN( 175)		{
HXDLIN( 175)			int _g1 = 0;
HXDLIN( 175)			::Array< ::Dynamic> _g2 = ::blocks::EventBlocks_obj::bloques;
HXDLIN( 175)			while((_g1 < _g2->length)){
HXDLIN( 175)				 ::Dynamic v = _g2->__get(_g1);
HXDLIN( 175)				_g1 = (_g1 + 1);
HXDLIN( 175)				if (::hx::IsEq( v->__Field(HX_("categoria",b3,65,39,11),::hx::paccDynamic),cat )) {
HXDLIN( 175)					_g->push(v);
            				}
            			}
            		}
HXDLIN( 175)		return _g;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(EventBlocks_obj,getBloquesPorCategoria,return )

::Array< ::String > EventBlocks_obj::getCategorias(){
            	HX_STACKFRAME(&_hx_pos_07980b65fb741afb_178_getCategorias)
HXLINE( 179)		::Array< ::String > cats = ::Array_obj< ::String >::__new(0);
HXLINE( 180)		{
HXLINE( 180)			int _g = 0;
HXDLIN( 180)			::Array< ::Dynamic> _g1 = ::blocks::EventBlocks_obj::bloques;
HXDLIN( 180)			while((_g < _g1->length)){
HXLINE( 180)				 ::Dynamic b = _g1->__get(_g);
HXDLIN( 180)				_g = (_g + 1);
HXDLIN( 180)				if (!(cats->contains( ::Dynamic(b->__Field(HX_("categoria",b3,65,39,11),::hx::paccDynamic))))) {
HXLINE( 180)					cats->push( ::Dynamic(b->__Field(HX_("categoria",b3,65,39,11),::hx::paccDynamic)));
            				}
            			}
            		}
HXLINE( 181)		return cats;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(EventBlocks_obj,getCategorias,return )


EventBlocks_obj::EventBlocks_obj()
{
}

bool EventBlocks_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"bloques") ) { outValue = ( bloques ); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"cooldowns") ) { outValue = ( cooldowns ); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"puedeEjecutar") ) { outValue = puedeEjecutar_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getCategorias") ) { outValue = getCategorias_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"marcarEjecutado") ) { outValue = marcarEjecutado_dyn(); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"getBloquesPorCategoria") ) { outValue = getBloquesPorCategoria_dyn(); return true; }
	}
	return false;
}

bool EventBlocks_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"bloques") ) { bloques=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"cooldowns") ) { cooldowns=ioValue.Cast<  ::haxe::ds::StringMap >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *EventBlocks_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo EventBlocks_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(void *) &EventBlocks_obj::cooldowns,HX_("cooldowns",68,ea,5f,74)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(void *) &EventBlocks_obj::bloques,HX_("bloques",37,0e,47,4e)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void EventBlocks_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(EventBlocks_obj::cooldowns,"cooldowns");
	HX_MARK_MEMBER_NAME(EventBlocks_obj::bloques,"bloques");
};

#ifdef HXCPP_VISIT_ALLOCS
static void EventBlocks_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(EventBlocks_obj::cooldowns,"cooldowns");
	HX_VISIT_MEMBER_NAME(EventBlocks_obj::bloques,"bloques");
};

#endif

::hx::Class EventBlocks_obj::__mClass;

static ::String EventBlocks_obj_sStaticFields[] = {
	HX_("cooldowns",68,ea,5f,74),
	HX_("puedeEjecutar",f4,b1,aa,11),
	HX_("marcarEjecutado",34,9b,18,57),
	HX_("bloques",37,0e,47,4e),
	HX_("getBloquesPorCategoria",81,db,8e,38),
	HX_("getCategorias",96,f3,71,5d),
	::String(null())
};

void EventBlocks_obj::__register()
{
	EventBlocks_obj _hx_dummy;
	EventBlocks_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("blocks.EventBlocks",38,a4,08,a8);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &EventBlocks_obj::__GetStatic;
	__mClass->mSetStaticField = &EventBlocks_obj::__SetStatic;
	__mClass->mMarkFunc = EventBlocks_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(EventBlocks_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< EventBlocks_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = EventBlocks_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = EventBlocks_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = EventBlocks_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void EventBlocks_obj::__boot()
{
{
            	HX_GC_STACKFRAME(&_hx_pos_07980b65fb741afb_16_boot)
HXDLIN(  16)		cooldowns =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
            	}
{
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(0)
            		void _hx_run(){
            			HX_STACKFRAME(&_hx_pos_07980b65fb741afb_37_boot)
HXLINE(  37)			::haxe::Log_obj::trace(HX_W(u"\U0001f3b5 Evento del chart detectado!",c9d0,4cea),::hx::SourceInfo(HX_("source/blocks/EventBlocks.hx",d3,c5,df,6c),37,HX_("blocks.EventBlocks",38,a4,08,a8),HX_("bloques",37,0e,47,4e)));
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(0)
            		void _hx_run(){
            			HX_STACKFRAME(&_hx_pos_07980b65fb741afb_48_boot)
HXLINE(  49)			if (!(::blocks::EventBlocks_obj::puedeEjecutar(HX_("beat",76,e1,13,41)))) {
HXLINE(  49)				return;
            			}
HXLINE(  50)			::blocks::EventBlocks_obj::marcarEjecutado(HX_("beat",76,e1,13,41));
HXLINE(  51)			::haxe::Log_obj::trace(HX_W(u"\U0001f3b5 Beat alcanzado!",01ca,91cf),::hx::SourceInfo(HX_("source/blocks/EventBlocks.hx",d3,c5,df,6c),51,HX_("blocks.EventBlocks",38,a4,08,a8),HX_("bloques",37,0e,47,4e)));
HXLINE(  52)			::flixel::FlxG_obj::camera->flash((int)1157627903,((Float)0.2),null(),null());
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_3) HXARGC(0)
            		void _hx_run(){
            			HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_2) HXARGC(0)
            			void _hx_run(){
            				HX_STACKFRAME(&_hx_pos_07980b65fb741afb_65_boot)
HXLINE(  65)				::flixel::FlxG_obj::timeScale = ((Float)1.0);
            			}
            			HX_END_LOCAL_FUNC0((void))

            			HX_STACKFRAME(&_hx_pos_07980b65fb741afb_61_boot)
HXLINE(  62)			::haxe::Log_obj::trace(HX_W(u"\u26a1 Velocidad cambiada!",7c91,b5c1),::hx::SourceInfo(HX_("source/blocks/EventBlocks.hx",d3,c5,df,6c),62,HX_("blocks.EventBlocks",38,a4,08,a8),HX_("bloques",37,0e,47,4e)));
HXLINE(  63)			::flixel::FlxG_obj::timeScale = ((Float)1.5);
HXLINE(  64)			::haxe::Timer_obj::delay( ::Dynamic(new _hx_Closure_2()),2000);
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_4) HXARGC(0)
            		void _hx_run(){
            			HX_STACKFRAME(&_hx_pos_07980b65fb741afb_76_boot)
HXLINE(  76)			::flixel::FlxG_obj::camera->flash((int)-1996488705,((Float)0.5),null(),null());
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_6) HXARGC(0)
            		void _hx_run(){
            			HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_5) HXARGC(0)
            			void _hx_run(){
            				HX_STACKFRAME(&_hx_pos_07980b65fb741afb_90_boot)
HXLINE(  90)				::flixel::FlxG_obj::camera->set_zoom(((Float)1.0));
            			}
            			HX_END_LOCAL_FUNC0((void))

            			HX_STACKFRAME(&_hx_pos_07980b65fb741afb_87_boot)
HXLINE(  88)			::flixel::FlxG_obj::camera->set_zoom(((Float)1.2));
HXLINE(  89)			::haxe::Timer_obj::delay( ::Dynamic(new _hx_Closure_5()),1000);
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_8) HXARGC(0)
            		void _hx_run(){
            			HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_7) HXARGC(0)
            			void _hx_run(){
            				HX_STACKFRAME(&_hx_pos_07980b65fb741afb_103_boot)
HXLINE( 103)				::flixel::FlxG_obj::camera->set_angle(( (Float)(0) ));
            			}
            			HX_END_LOCAL_FUNC0((void))

            			HX_STACKFRAME(&_hx_pos_07980b65fb741afb_100_boot)
HXLINE( 101)			::flixel::FlxG_obj::camera->set_angle(( (Float)(15) ));
HXLINE( 102)			::haxe::Timer_obj::delay( ::Dynamic(new _hx_Closure_7()),1000);
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_9) HXARGC(0)
            		void _hx_run(){
            			HX_STACKFRAME(&_hx_pos_07980b65fb741afb_116_boot)
HXLINE( 116)			::haxe::Log_obj::trace(HX_W(u"\U0001f50a Sonido reproducido!",9fe8,58e8),::hx::SourceInfo(HX_("source/blocks/EventBlocks.hx",d3,c5,df,6c),116,HX_("blocks.EventBlocks",38,a4,08,a8),HX_("bloques",37,0e,47,4e)));
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_10) HXARGC(0)
            		void _hx_run(){
            			HX_STACKFRAME(&_hx_pos_07980b65fb741afb_128_boot)
HXLINE( 129)			::haxe::Log_obj::trace(HX_W(u"\u2b50 +100 puntos!",9133,d39a),::hx::SourceInfo(HX_("source/blocks/EventBlocks.hx",d3,c5,df,6c),129,HX_("blocks.EventBlocks",38,a4,08,a8),HX_("bloques",37,0e,47,4e)));
HXLINE( 130)			::flixel::FlxG_obj::camera->flash((int)1157627648,((Float)0.3),null(),null());
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_11) HXARGC(0)
            		void _hx_run(){
            			HX_STACKFRAME(&_hx_pos_07980b65fb741afb_139_boot)
HXLINE( 140)			::haxe::Log_obj::trace(HX_W(u"\u2764\ufe0f Vida cambiada!",d4ac,766c),::hx::SourceInfo(HX_("source/blocks/EventBlocks.hx",d3,c5,df,6c),140,HX_("blocks.EventBlocks",38,a4,08,a8),HX_("bloques",37,0e,47,4e)));
HXLINE( 141)			::flixel::FlxG_obj::camera->flash((int)1157562368,((Float)0.3),null(),null());
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_13) HXARGC(0)
            		void _hx_run(){
            			HX_STACKFRAME(&_hx_pos_07980b65fb741afb_150_boot)
HXLINE( 151)			if (!(::blocks::EventBlocks_obj::puedeEjecutar(HX_("shake_window",89,cb,62,3c)))) {
HXLINE( 151)				return;
            			}
HXLINE( 152)			::blocks::EventBlocks_obj::marcarEjecutado(HX_("shake_window",89,cb,62,3c));
HXLINE( 155)			 ::lime::ui::Window window = ::openfl::Lib_obj::get_application()->_hx___window;
HXLINE( 156)			int originalX = window->_hx___x;
HXLINE( 157)			int originalY = window->_hx___y;
HXLINE( 159)			{
HXLINE( 159)				int _g = 0;
HXDLIN( 159)				while((_g < 10)){
            					HX_BEGIN_LOCAL_FUNC_S4(::hx::LocalFunc,_hx_Closure_12,int,originalY, ::lime::ui::Window,window,int,originalX,int,i) HXARGC(0)
            					void _hx_run(){
            						HX_STACKFRAME(&_hx_pos_07980b65fb741afb_160_boot)
HXLINE( 161)						 ::lime::ui::Window window1 = window;
HXDLIN( 161)						int originalX1 = originalX;
HXDLIN( 161)						window1->set_x((originalX1 + ::Std_obj::_hx_int(((::Math_obj::random() * ( (Float)(20) )) - ( (Float)(10) )))));
HXLINE( 162)						 ::lime::ui::Window window2 = window;
HXDLIN( 162)						int originalY1 = originalY;
HXDLIN( 162)						window2->set_y((originalY1 + ::Std_obj::_hx_int(((::Math_obj::random() * ( (Float)(20) )) - ( (Float)(10) )))));
HXLINE( 164)						if ((i == 9)) {
HXLINE( 165)							window->set_x(originalX);
HXLINE( 166)							window->set_y(originalY);
            						}
            					}
            					HX_END_LOCAL_FUNC0((void))

HXLINE( 159)					_g = (_g + 1);
HXDLIN( 159)					int i = (_g - 1);
HXLINE( 160)					::haxe::Timer_obj::delay( ::Dynamic(new _hx_Closure_12(originalY,window,originalX,i)),(i * 100));
            				}
            			}
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_STACKFRAME(&_hx_pos_07980b65fb741afb_28_boot)
HXDLIN(  28)		bloques = ::Array_obj< ::Dynamic>::__new(10)->init(0, ::Dynamic(::hx::Anon_obj::Create(6)
            			->setFixed(0,HX_("codigo",99,79,38,c1),HX_("def on_chart_event(event_name, value1, value2):\n    pass\n",cd,87,01,5e))
            			->setFixed(1,HX_("categoria",b3,65,39,11),HX_("event",1a,c8,c4,75))
            			->setFixed(2,HX_("nombre",09,17,13,2d),HX_("cuando evento del chart",74,13,79,3e))
            			->setFixed(3,HX_("color",63,71,5c,4a),-10496)
            			->setFixed(4,HX_("descripcion",6d,68,e0,53),HX_("Se ejecuta cuando se activa un evento en el chart de FNF",de,f7,14,0f))
            			->setFixed(5,HX_("logica",43,59,6a,5c), ::Dynamic(new _hx_Closure_0()))))->init(1, ::Dynamic(::hx::Anon_obj::Create(6)
            			->setFixed(0,HX_("codigo",99,79,38,c1),HX_("def on_beat(beat_number):\n    pass\n",05,ad,0f,b6))
            			->setFixed(1,HX_("categoria",b3,65,39,11),HX_("chart",de,9c,b3,45))
            			->setFixed(2,HX_("nombre",09,17,13,2d),HX_("en el beat (4)",95,b8,03,4a))
            			->setFixed(3,HX_("color",63,71,5c,4a),-11751600)
            			->setFixed(4,HX_("descripcion",6d,68,e0,53),HX_W(u"Se ejecuta cuando llega a un beat espec\u00edfico",4def,46f9))
            			->setFixed(5,HX_("logica",43,59,6a,5c), ::Dynamic(new _hx_Closure_1()))))->init(2, ::Dynamic(::hx::Anon_obj::Create(6)
            			->setFixed(0,HX_("codigo",99,79,38,c1),HX_("def change_speed(speed):\n    pass\n",12,39,75,7b))
            			->setFixed(1,HX_("categoria",b3,65,39,11),HX_("chart",de,9c,b3,45))
            			->setFixed(2,HX_("nombre",09,17,13,2d),HX_("cambiar scroll speed (1.0)",cb,de,23,75))
            			->setFixed(3,HX_("color",63,71,5c,4a),-14575885)
            			->setFixed(4,HX_("descripcion",6d,68,e0,53),HX_W(u"Cambia la velocidad de la canci\u00f3n",10bb,8add))
            			->setFixed(5,HX_("logica",43,59,6a,5c), ::Dynamic(new _hx_Closure_3()))))->init(3, ::Dynamic(::hx::Anon_obj::Create(6)
            			->setFixed(0,HX_("codigo",99,79,38,c1),HX_("def flash_screen(color):\n    pass\n",d1,7a,22,ea))
            			->setFixed(1,HX_("categoria",b3,65,39,11),HX_("chart",de,9c,b3,45))
            			->setFixed(2,HX_("nombre",09,17,13,2d),HX_("flash pantalla [blanco] (0.5)",f2,68,54,c2))
            			->setFixed(3,HX_("color",63,71,5c,4a),-26624)
            			->setFixed(4,HX_("descripcion",6d,68,e0,53),HX_("Hace un flash en la pantalla",5d,95,c1,68))
            			->setFixed(5,HX_("logica",43,59,6a,5c), ::Dynamic(new _hx_Closure_4()))))->init(4, ::Dynamic(::hx::Anon_obj::Create(6)
            			->setFixed(0,HX_("codigo",99,79,38,c1),HX_("def zoom_camera(zoom_level):\n    pass\n",4a,5e,e5,e1))
            			->setFixed(1,HX_("categoria",b3,65,39,11),HX_("visual",c0,22,8c,ef))
            			->setFixed(2,HX_("nombre",09,17,13,2d),HX_("zoom HUD (1.2) por (1.0)s",dc,e0,09,0f))
            			->setFixed(3,HX_("color",63,71,5c,4a),-6543440)
            			->setFixed(4,HX_("descripcion",6d,68,e0,53),HX_W(u"Hace zoom a la c\u00e1mara",20a0,2759))
            			->setFixed(5,HX_("logica",43,59,6a,5c), ::Dynamic(new _hx_Closure_6()))))->init(5, ::Dynamic(::hx::Anon_obj::Create(6)
            			->setFixed(0,HX_("codigo",99,79,38,c1),HX_("def rotate_camera(degrees):\n    pass\n",ad,81,c6,14))
            			->setFixed(1,HX_("categoria",b3,65,39,11),HX_("visual",c0,22,8c,ef))
            			->setFixed(2,HX_("nombre",09,17,13,2d),HX_("rotar game (15) grados",bf,0f,b6,16))
            			->setFixed(3,HX_("color",63,71,5c,4a),-1499549)
            			->setFixed(4,HX_("descripcion",6d,68,e0,53),HX_W(u"Rota la c\u00e1mara",af4f,fdbe))
            			->setFixed(5,HX_("logica",43,59,6a,5c), ::Dynamic(new _hx_Closure_8()))))->init(6, ::Dynamic(::hx::Anon_obj::Create(6)
            			->setFixed(0,HX_("codigo",99,79,38,c1),HX_("def play_sound(sound_file):\n    pass\n",b5,17,a0,de))
            			->setFixed(1,HX_("categoria",b3,65,39,11),HX_("audio",d6,78,80,27))
            			->setFixed(2,HX_("nombre",09,17,13,2d),HX_("reproducir sonido [hit.wav]",08,4e,5d,82))
            			->setFixed(3,HX_("color",63,71,5c,4a),-43230)
            			->setFixed(4,HX_("descripcion",6d,68,e0,53),HX_("Reproduce un efecto de sonido",2f,ce,7c,1e))
            			->setFixed(5,HX_("logica",43,59,6a,5c), ::Dynamic(new _hx_Closure_9()))))->init(7, ::Dynamic(::hx::Anon_obj::Create(6)
            			->setFixed(0,HX_("codigo",99,79,38,c1),HX_("def increase_score(points):\n    pass\n",fb,72,97,18))
            			->setFixed(1,HX_("categoria",b3,65,39,11),HX_("gameplay",e6,02,a7,cb))
            			->setFixed(2,HX_("nombre",09,17,13,2d),HX_("aumentar score (100)",d5,f5,af,49))
            			->setFixed(3,HX_("color",63,71,5c,4a),-16121)
            			->setFixed(4,HX_("descripcion",6d,68,e0,53),HX_("Aumenta el puntaje del jugador",16,d1,62,28))
            			->setFixed(5,HX_("logica",43,59,6a,5c), ::Dynamic(new _hx_Closure_10()))))->init(8, ::Dynamic(::hx::Anon_obj::Create(6)
            			->setFixed(0,HX_("codigo",99,79,38,c1),HX_("def change_health(amount):\n    pass\n",d0,f6,d5,35))
            			->setFixed(1,HX_("categoria",b3,65,39,11),HX_("gameplay",e6,02,a7,cb))
            			->setFixed(2,HX_("nombre",09,17,13,2d),HX_("cambiar health a (50)",90,11,3b,9e))
            			->setFixed(3,HX_("color",63,71,5c,4a),-769226)
            			->setFixed(4,HX_("descripcion",6d,68,e0,53),HX_("Cambia la vida del jugador",93,ab,4e,5e))
            			->setFixed(5,HX_("logica",43,59,6a,5c), ::Dynamic(new _hx_Closure_11()))))->init(9, ::Dynamic(::hx::Anon_obj::Create(6)
            			->setFixed(0,HX_("codigo",99,79,38,c1),HX_("def shake_window(intensity, duration):\n    pass\n",57,96,7a,3f))
            			->setFixed(1,HX_("categoria",b3,65,39,11),HX_("visual",c0,22,8c,ef))
            			->setFixed(2,HX_("nombre",09,17,13,2d),HX_("temblar ventana intensity: (5.0) duration: (1.0)",8f,a3,30,cb))
            			->setFixed(3,HX_("color",63,71,5c,4a),16739143)
            			->setFixed(4,HX_("descripcion",6d,68,e0,53),HX_("Hace que la ventana del juego tiemble",43,98,cb,e7))
            			->setFixed(5,HX_("logica",43,59,6a,5c), ::Dynamic(new _hx_Closure_13()))));
            	}
}

} // end namespace blocks
