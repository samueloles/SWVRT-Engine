// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_flixel_system_FlxAssets
#include <flixel/system/FlxAssets.h>
#endif
#ifndef INCLUDED_flixel_system__FlxAssets_FlxGraphicSource_Impl_
#include <flixel/system/_FlxAssets/FlxGraphicSource_Impl_.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_5db4b632767887fe_46_resolveBitmapData,"flixel.system._FlxAssets.FlxGraphicSource_Impl_","resolveBitmapData",0x66b4fc73,"flixel.system._FlxAssets.FlxGraphicSource_Impl_.resolveBitmapData","flixel/system/FlxAssets.hx",46,0xd3ac1356)
namespace flixel{
namespace _hx_system{
namespace _FlxAssets{

void FlxGraphicSource_Impl__obj::__construct() { }

Dynamic FlxGraphicSource_Impl__obj::__CreateEmpty() { return new FlxGraphicSource_Impl__obj; }

void *FlxGraphicSource_Impl__obj::_hx_vtable = 0;

Dynamic FlxGraphicSource_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< FlxGraphicSource_Impl__obj > _hx_result = new FlxGraphicSource_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool FlxGraphicSource_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x249a8a7e;
}

 ::openfl::display::BitmapData FlxGraphicSource_Impl__obj::resolveBitmapData( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_5db4b632767887fe_46_resolveBitmapData)
HXDLIN(  46)		return ::flixel::_hx_system::FlxAssets_obj::resolveBitmapData(this1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxGraphicSource_Impl__obj,resolveBitmapData,return )


FlxGraphicSource_Impl__obj::FlxGraphicSource_Impl__obj()
{
}

bool FlxGraphicSource_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 17:
		if (HX_FIELD_EQ(inName,"resolveBitmapData") ) { outValue = resolveBitmapData_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *FlxGraphicSource_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *FlxGraphicSource_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class FlxGraphicSource_Impl__obj::__mClass;

static ::String FlxGraphicSource_Impl__obj_sStaticFields[] = {
	HX_("resolveBitmapData",c5,2b,67,fa),
	::String(null())
};

void FlxGraphicSource_Impl__obj::__register()
{
	FlxGraphicSource_Impl__obj _hx_dummy;
	FlxGraphicSource_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.system._FlxAssets.FlxGraphicSource_Impl_",9c,4d,09,25);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &FlxGraphicSource_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(FlxGraphicSource_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< FlxGraphicSource_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxGraphicSource_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxGraphicSource_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace system
} // end namespace _FlxAssets
