// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_flixel_system_debug_Icon
#include <flixel/system/debug/Icon.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_ArrowLeft
#include <flixel/system/debug/_Icon/ArrowLeft.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_ArrowRight
#include <flixel/system/debug/_Icon/ArrowRight.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_BitmapLog
#include <flixel/system/debug/_Icon/BitmapLog.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_Close
#include <flixel/system/debug/_Icon/Close.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_Console
#include <flixel/system/debug/_Icon/Console.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_Cross
#include <flixel/system/debug/_Icon/Cross.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_DrawDebug
#include <flixel/system/debug/_Icon/DrawDebug.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_Eraser
#include <flixel/system/debug/_Icon/Eraser.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_Flixel
#include <flixel/system/debug/_Icon/Flixel.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_Interactive
#include <flixel/system/debug/_Icon/Interactive.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_Log
#include <flixel/system/debug/_Icon/Log.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_Maximize
#include <flixel/system/debug/_Icon/Maximize.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_Minimize
#include <flixel/system/debug/_Icon/Minimize.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_Mover
#include <flixel/system/debug/_Icon/Mover.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_Open
#include <flixel/system/debug/_Icon/Open.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_Pause
#include <flixel/system/debug/_Icon/Pause.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_RecordOff
#include <flixel/system/debug/_Icon/RecordOff.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_RecordOn
#include <flixel/system/debug/_Icon/RecordOn.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_Restart
#include <flixel/system/debug/_Icon/Restart.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_Rotate
#include <flixel/system/debug/_Icon/Rotate.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_ScaleX
#include <flixel/system/debug/_Icon/ScaleX.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_ScaleXY
#include <flixel/system/debug/_Icon/ScaleXY.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_ScaleY
#include <flixel/system/debug/_Icon/ScaleY.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_Stats
#include <flixel/system/debug/_Icon/Stats.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_Step
#include <flixel/system/debug/_Icon/Step.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_Stop
#include <flixel/system/debug/_Icon/Stop.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_Transform
#include <flixel/system/debug/_Icon/Transform.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_Watch
#include <flixel/system/debug/_Icon/Watch.h>
#endif
#ifndef INCLUDED_flixel_system_debug__Icon_WindowHandle
#include <flixel/system/debug/_Icon/WindowHandle.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_94_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",94,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_95_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",95,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_96_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",96,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_97_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",97,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_98_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",98,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_99_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",99,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_100_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",100,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_101_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",101,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_102_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",102,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_103_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",103,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_104_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",104,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_105_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",105,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_106_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",106,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_107_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",107,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_108_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",108,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_109_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",109,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_110_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",110,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_111_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",111,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_112_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",112,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_113_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",113,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_114_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",114,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_115_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",115,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_116_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",116,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_117_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",117,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_118_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",118,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_119_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",119,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_120_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",120,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_121_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",121,0x2ea0993c)
HX_LOCAL_STACK_FRAME(_hx_pos_a39e6ea060a41a51_122_boot,"flixel.system.debug.Icon","boot",0x7f3b3b9f,"flixel.system.debug.Icon.boot","flixel/system/debug/Icon.hx",122,0x2ea0993c)
namespace flixel{
namespace _hx_system{
namespace debug{

void Icon_obj::__construct() { }

Dynamic Icon_obj::__CreateEmpty() { return new Icon_obj; }

void *Icon_obj::_hx_vtable = 0;

Dynamic Icon_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Icon_obj > _hx_result = new Icon_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Icon_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x6cea4081;
}

 ::flixel::_hx_system::debug::_Icon::Flixel Icon_obj::flixel;

 ::flixel::_hx_system::debug::_Icon::Cross Icon_obj::cross;

 ::flixel::_hx_system::debug::_Icon::Mover Icon_obj::mover;

 ::flixel::_hx_system::debug::_Icon::Eraser Icon_obj::eraser;

 ::flixel::_hx_system::debug::_Icon::BitmapLog Icon_obj::bitmapLog;

 ::flixel::_hx_system::debug::_Icon::Transform Icon_obj::transform;

 ::flixel::_hx_system::debug::_Icon::ScaleX Icon_obj::scaleX;

 ::flixel::_hx_system::debug::_Icon::ScaleY Icon_obj::scaleY;

 ::flixel::_hx_system::debug::_Icon::ScaleXY Icon_obj::scaleXY;

 ::flixel::_hx_system::debug::_Icon::Rotate Icon_obj::rotate;

 ::flixel::_hx_system::debug::_Icon::DrawDebug Icon_obj::drawDebug;

 ::flixel::_hx_system::debug::_Icon::Log Icon_obj::log;

 ::flixel::_hx_system::debug::_Icon::Stats Icon_obj::stats;

 ::flixel::_hx_system::debug::_Icon::Watch Icon_obj::watch;

 ::flixel::_hx_system::debug::_Icon::Console Icon_obj::console;

 ::flixel::_hx_system::debug::_Icon::ArrowLeft Icon_obj::arrowLeft;

 ::flixel::_hx_system::debug::_Icon::ArrowRight Icon_obj::arrowRight;

 ::flixel::_hx_system::debug::_Icon::Close Icon_obj::close;

 ::flixel::_hx_system::debug::_Icon::Interactive Icon_obj::interactive;

 ::flixel::_hx_system::debug::_Icon::WindowHandle Icon_obj::windowHandle;

 ::flixel::_hx_system::debug::_Icon::Minimize Icon_obj::minimize;

 ::flixel::_hx_system::debug::_Icon::Maximize Icon_obj::maximize;

 ::flixel::_hx_system::debug::_Icon::Open Icon_obj::open;

 ::flixel::_hx_system::debug::_Icon::Pause Icon_obj::pause;

 ::flixel::_hx_system::debug::_Icon::RecordOff Icon_obj::recordOff;

 ::flixel::_hx_system::debug::_Icon::RecordOn Icon_obj::recordOn;

 ::flixel::_hx_system::debug::_Icon::Restart Icon_obj::restart;

 ::flixel::_hx_system::debug::_Icon::Step Icon_obj::step;

 ::flixel::_hx_system::debug::_Icon::Stop Icon_obj::stop;


Icon_obj::Icon_obj()
{
}

bool Icon_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"log") ) { outValue = ( log ); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"open") ) { outValue = ( open ); return true; }
		if (HX_FIELD_EQ(inName,"step") ) { outValue = ( step ); return true; }
		if (HX_FIELD_EQ(inName,"stop") ) { outValue = ( stop ); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"cross") ) { outValue = ( cross ); return true; }
		if (HX_FIELD_EQ(inName,"mover") ) { outValue = ( mover ); return true; }
		if (HX_FIELD_EQ(inName,"stats") ) { outValue = ( stats ); return true; }
		if (HX_FIELD_EQ(inName,"watch") ) { outValue = ( watch ); return true; }
		if (HX_FIELD_EQ(inName,"close") ) { outValue = ( close ); return true; }
		if (HX_FIELD_EQ(inName,"pause") ) { outValue = ( pause ); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"flixel") ) { outValue = ( flixel ); return true; }
		if (HX_FIELD_EQ(inName,"eraser") ) { outValue = ( eraser ); return true; }
		if (HX_FIELD_EQ(inName,"scaleX") ) { outValue = ( scaleX ); return true; }
		if (HX_FIELD_EQ(inName,"scaleY") ) { outValue = ( scaleY ); return true; }
		if (HX_FIELD_EQ(inName,"rotate") ) { outValue = ( rotate ); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"scaleXY") ) { outValue = ( scaleXY ); return true; }
		if (HX_FIELD_EQ(inName,"console") ) { outValue = ( console ); return true; }
		if (HX_FIELD_EQ(inName,"restart") ) { outValue = ( restart ); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"minimize") ) { outValue = ( minimize ); return true; }
		if (HX_FIELD_EQ(inName,"maximize") ) { outValue = ( maximize ); return true; }
		if (HX_FIELD_EQ(inName,"recordOn") ) { outValue = ( recordOn ); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"bitmapLog") ) { outValue = ( bitmapLog ); return true; }
		if (HX_FIELD_EQ(inName,"transform") ) { outValue = ( transform ); return true; }
		if (HX_FIELD_EQ(inName,"drawDebug") ) { outValue = ( drawDebug ); return true; }
		if (HX_FIELD_EQ(inName,"arrowLeft") ) { outValue = ( arrowLeft ); return true; }
		if (HX_FIELD_EQ(inName,"recordOff") ) { outValue = ( recordOff ); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"arrowRight") ) { outValue = ( arrowRight ); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"interactive") ) { outValue = ( interactive ); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"windowHandle") ) { outValue = ( windowHandle ); return true; }
	}
	return false;
}

bool Icon_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"log") ) { log=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::Log >(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"open") ) { open=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::Open >(); return true; }
		if (HX_FIELD_EQ(inName,"step") ) { step=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::Step >(); return true; }
		if (HX_FIELD_EQ(inName,"stop") ) { stop=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::Stop >(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"cross") ) { cross=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::Cross >(); return true; }
		if (HX_FIELD_EQ(inName,"mover") ) { mover=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::Mover >(); return true; }
		if (HX_FIELD_EQ(inName,"stats") ) { stats=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::Stats >(); return true; }
		if (HX_FIELD_EQ(inName,"watch") ) { watch=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::Watch >(); return true; }
		if (HX_FIELD_EQ(inName,"close") ) { close=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::Close >(); return true; }
		if (HX_FIELD_EQ(inName,"pause") ) { pause=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::Pause >(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"flixel") ) { flixel=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::Flixel >(); return true; }
		if (HX_FIELD_EQ(inName,"eraser") ) { eraser=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::Eraser >(); return true; }
		if (HX_FIELD_EQ(inName,"scaleX") ) { scaleX=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::ScaleX >(); return true; }
		if (HX_FIELD_EQ(inName,"scaleY") ) { scaleY=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::ScaleY >(); return true; }
		if (HX_FIELD_EQ(inName,"rotate") ) { rotate=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::Rotate >(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"scaleXY") ) { scaleXY=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::ScaleXY >(); return true; }
		if (HX_FIELD_EQ(inName,"console") ) { console=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::Console >(); return true; }
		if (HX_FIELD_EQ(inName,"restart") ) { restart=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::Restart >(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"minimize") ) { minimize=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::Minimize >(); return true; }
		if (HX_FIELD_EQ(inName,"maximize") ) { maximize=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::Maximize >(); return true; }
		if (HX_FIELD_EQ(inName,"recordOn") ) { recordOn=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::RecordOn >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"bitmapLog") ) { bitmapLog=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::BitmapLog >(); return true; }
		if (HX_FIELD_EQ(inName,"transform") ) { transform=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::Transform >(); return true; }
		if (HX_FIELD_EQ(inName,"drawDebug") ) { drawDebug=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::DrawDebug >(); return true; }
		if (HX_FIELD_EQ(inName,"arrowLeft") ) { arrowLeft=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::ArrowLeft >(); return true; }
		if (HX_FIELD_EQ(inName,"recordOff") ) { recordOff=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::RecordOff >(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"arrowRight") ) { arrowRight=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::ArrowRight >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"interactive") ) { interactive=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::Interactive >(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"windowHandle") ) { windowHandle=ioValue.Cast<  ::flixel::_hx_system::debug::_Icon::WindowHandle >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Icon_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo Icon_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::Flixel */ ,(void *) &Icon_obj::flixel,HX_("flixel",5c,42,70,3d)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::Cross */ ,(void *) &Icon_obj::cross,HX_("cross",80,5f,5a,4c)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::Mover */ ,(void *) &Icon_obj::mover,HX_("mover",41,cc,65,0c)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::Eraser */ ,(void *) &Icon_obj::eraser,HX_("eraser",cc,e0,2e,46)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::BitmapLog */ ,(void *) &Icon_obj::bitmapLog,HX_("bitmapLog",d5,5b,db,c6)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::Transform */ ,(void *) &Icon_obj::transform,HX_("transform",6c,2d,93,45)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::ScaleX */ ,(void *) &Icon_obj::scaleX,HX_("scaleX",8e,ea,25,3c)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::ScaleY */ ,(void *) &Icon_obj::scaleY,HX_("scaleY",8f,ea,25,3c)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::ScaleXY */ ,(void *) &Icon_obj::scaleXY,HX_("scaleXY",0b,52,07,65)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::Rotate */ ,(void *) &Icon_obj::rotate,HX_("rotate",5b,46,20,cb)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::DrawDebug */ ,(void *) &Icon_obj::drawDebug,HX_("drawDebug",af,87,2a,9f)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::Log */ ,(void *) &Icon_obj::log,HX_("log",84,54,52,00)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::Stats */ ,(void *) &Icon_obj::stats,HX_("stats",1f,76,0b,84)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::Watch */ ,(void *) &Icon_obj::watch,HX_("watch",4f,16,25,c5)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::Console */ ,(void *) &Icon_obj::console,HX_("console",57,eb,d5,18)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::ArrowLeft */ ,(void *) &Icon_obj::arrowLeft,HX_("arrowLeft",70,c6,53,03)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::ArrowRight */ ,(void *) &Icon_obj::arrowRight,HX_("arrowRight",53,e9,06,5d)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::Close */ ,(void *) &Icon_obj::close,HX_("close",b8,17,63,48)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::Interactive */ ,(void *) &Icon_obj::interactive,HX_("interactive",e2,3d,59,3c)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::WindowHandle */ ,(void *) &Icon_obj::windowHandle,HX_("windowHandle",b8,1f,6e,7f)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::Minimize */ ,(void *) &Icon_obj::minimize,HX_("minimize",1e,3f,79,21)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::Maximize */ ,(void *) &Icon_obj::maximize,HX_("maximize",cc,24,5f,d4)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::Open */ ,(void *) &Icon_obj::open,HX_("open",ca,03,b4,49)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::Pause */ ,(void *) &Icon_obj::pause,HX_("pause",f6,d6,57,bd)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::RecordOff */ ,(void *) &Icon_obj::recordOff,HX_("recordOff",5e,85,d5,dc)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::RecordOn */ ,(void *) &Icon_obj::recordOn,HX_("recordOn",10,42,e4,aa)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::Restart */ ,(void *) &Icon_obj::restart,HX_("restart",cf,c7,a5,6a)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::Step */ ,(void *) &Icon_obj::step,HX_("step",4c,e7,5b,4c)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::_Icon::Stop */ ,(void *) &Icon_obj::stop,HX_("stop",02,f0,5b,4c)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void Icon_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Icon_obj::flixel,"flixel");
	HX_MARK_MEMBER_NAME(Icon_obj::cross,"cross");
	HX_MARK_MEMBER_NAME(Icon_obj::mover,"mover");
	HX_MARK_MEMBER_NAME(Icon_obj::eraser,"eraser");
	HX_MARK_MEMBER_NAME(Icon_obj::bitmapLog,"bitmapLog");
	HX_MARK_MEMBER_NAME(Icon_obj::transform,"transform");
	HX_MARK_MEMBER_NAME(Icon_obj::scaleX,"scaleX");
	HX_MARK_MEMBER_NAME(Icon_obj::scaleY,"scaleY");
	HX_MARK_MEMBER_NAME(Icon_obj::scaleXY,"scaleXY");
	HX_MARK_MEMBER_NAME(Icon_obj::rotate,"rotate");
	HX_MARK_MEMBER_NAME(Icon_obj::drawDebug,"drawDebug");
	HX_MARK_MEMBER_NAME(Icon_obj::log,"log");
	HX_MARK_MEMBER_NAME(Icon_obj::stats,"stats");
	HX_MARK_MEMBER_NAME(Icon_obj::watch,"watch");
	HX_MARK_MEMBER_NAME(Icon_obj::console,"console");
	HX_MARK_MEMBER_NAME(Icon_obj::arrowLeft,"arrowLeft");
	HX_MARK_MEMBER_NAME(Icon_obj::arrowRight,"arrowRight");
	HX_MARK_MEMBER_NAME(Icon_obj::close,"close");
	HX_MARK_MEMBER_NAME(Icon_obj::interactive,"interactive");
	HX_MARK_MEMBER_NAME(Icon_obj::windowHandle,"windowHandle");
	HX_MARK_MEMBER_NAME(Icon_obj::minimize,"minimize");
	HX_MARK_MEMBER_NAME(Icon_obj::maximize,"maximize");
	HX_MARK_MEMBER_NAME(Icon_obj::open,"open");
	HX_MARK_MEMBER_NAME(Icon_obj::pause,"pause");
	HX_MARK_MEMBER_NAME(Icon_obj::recordOff,"recordOff");
	HX_MARK_MEMBER_NAME(Icon_obj::recordOn,"recordOn");
	HX_MARK_MEMBER_NAME(Icon_obj::restart,"restart");
	HX_MARK_MEMBER_NAME(Icon_obj::step,"step");
	HX_MARK_MEMBER_NAME(Icon_obj::stop,"stop");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Icon_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Icon_obj::flixel,"flixel");
	HX_VISIT_MEMBER_NAME(Icon_obj::cross,"cross");
	HX_VISIT_MEMBER_NAME(Icon_obj::mover,"mover");
	HX_VISIT_MEMBER_NAME(Icon_obj::eraser,"eraser");
	HX_VISIT_MEMBER_NAME(Icon_obj::bitmapLog,"bitmapLog");
	HX_VISIT_MEMBER_NAME(Icon_obj::transform,"transform");
	HX_VISIT_MEMBER_NAME(Icon_obj::scaleX,"scaleX");
	HX_VISIT_MEMBER_NAME(Icon_obj::scaleY,"scaleY");
	HX_VISIT_MEMBER_NAME(Icon_obj::scaleXY,"scaleXY");
	HX_VISIT_MEMBER_NAME(Icon_obj::rotate,"rotate");
	HX_VISIT_MEMBER_NAME(Icon_obj::drawDebug,"drawDebug");
	HX_VISIT_MEMBER_NAME(Icon_obj::log,"log");
	HX_VISIT_MEMBER_NAME(Icon_obj::stats,"stats");
	HX_VISIT_MEMBER_NAME(Icon_obj::watch,"watch");
	HX_VISIT_MEMBER_NAME(Icon_obj::console,"console");
	HX_VISIT_MEMBER_NAME(Icon_obj::arrowLeft,"arrowLeft");
	HX_VISIT_MEMBER_NAME(Icon_obj::arrowRight,"arrowRight");
	HX_VISIT_MEMBER_NAME(Icon_obj::close,"close");
	HX_VISIT_MEMBER_NAME(Icon_obj::interactive,"interactive");
	HX_VISIT_MEMBER_NAME(Icon_obj::windowHandle,"windowHandle");
	HX_VISIT_MEMBER_NAME(Icon_obj::minimize,"minimize");
	HX_VISIT_MEMBER_NAME(Icon_obj::maximize,"maximize");
	HX_VISIT_MEMBER_NAME(Icon_obj::open,"open");
	HX_VISIT_MEMBER_NAME(Icon_obj::pause,"pause");
	HX_VISIT_MEMBER_NAME(Icon_obj::recordOff,"recordOff");
	HX_VISIT_MEMBER_NAME(Icon_obj::recordOn,"recordOn");
	HX_VISIT_MEMBER_NAME(Icon_obj::restart,"restart");
	HX_VISIT_MEMBER_NAME(Icon_obj::step,"step");
	HX_VISIT_MEMBER_NAME(Icon_obj::stop,"stop");
};

#endif

::hx::Class Icon_obj::__mClass;

static ::String Icon_obj_sStaticFields[] = {
	HX_("flixel",5c,42,70,3d),
	HX_("cross",80,5f,5a,4c),
	HX_("mover",41,cc,65,0c),
	HX_("eraser",cc,e0,2e,46),
	HX_("bitmapLog",d5,5b,db,c6),
	HX_("transform",6c,2d,93,45),
	HX_("scaleX",8e,ea,25,3c),
	HX_("scaleY",8f,ea,25,3c),
	HX_("scaleXY",0b,52,07,65),
	HX_("rotate",5b,46,20,cb),
	HX_("drawDebug",af,87,2a,9f),
	HX_("log",84,54,52,00),
	HX_("stats",1f,76,0b,84),
	HX_("watch",4f,16,25,c5),
	HX_("console",57,eb,d5,18),
	HX_("arrowLeft",70,c6,53,03),
	HX_("arrowRight",53,e9,06,5d),
	HX_("close",b8,17,63,48),
	HX_("interactive",e2,3d,59,3c),
	HX_("windowHandle",b8,1f,6e,7f),
	HX_("minimize",1e,3f,79,21),
	HX_("maximize",cc,24,5f,d4),
	HX_("open",ca,03,b4,49),
	HX_("pause",f6,d6,57,bd),
	HX_("recordOff",5e,85,d5,dc),
	HX_("recordOn",10,42,e4,aa),
	HX_("restart",cf,c7,a5,6a),
	HX_("step",4c,e7,5b,4c),
	HX_("stop",02,f0,5b,4c),
	::String(null())
};

void Icon_obj::__register()
{
	Icon_obj _hx_dummy;
	Icon_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.system.debug.Icon",21,e0,49,b8);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Icon_obj::__GetStatic;
	__mClass->mSetStaticField = &Icon_obj::__SetStatic;
	__mClass->mMarkFunc = Icon_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Icon_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Icon_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Icon_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Icon_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Icon_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Icon_obj::__boot()
{
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_94_boot)
HXDLIN(  94)		flixel =  ::flixel::_hx_system::debug::_Icon::Flixel_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_95_boot)
HXDLIN(  95)		cross =  ::flixel::_hx_system::debug::_Icon::Cross_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_96_boot)
HXDLIN(  96)		mover =  ::flixel::_hx_system::debug::_Icon::Mover_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_97_boot)
HXDLIN(  97)		eraser =  ::flixel::_hx_system::debug::_Icon::Eraser_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_98_boot)
HXDLIN(  98)		bitmapLog =  ::flixel::_hx_system::debug::_Icon::BitmapLog_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_99_boot)
HXDLIN(  99)		transform =  ::flixel::_hx_system::debug::_Icon::Transform_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_100_boot)
HXDLIN( 100)		scaleX =  ::flixel::_hx_system::debug::_Icon::ScaleX_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_101_boot)
HXDLIN( 101)		scaleY =  ::flixel::_hx_system::debug::_Icon::ScaleY_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_102_boot)
HXDLIN( 102)		scaleXY =  ::flixel::_hx_system::debug::_Icon::ScaleXY_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_103_boot)
HXDLIN( 103)		rotate =  ::flixel::_hx_system::debug::_Icon::Rotate_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_104_boot)
HXDLIN( 104)		drawDebug =  ::flixel::_hx_system::debug::_Icon::DrawDebug_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_105_boot)
HXDLIN( 105)		log =  ::flixel::_hx_system::debug::_Icon::Log_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_106_boot)
HXDLIN( 106)		stats =  ::flixel::_hx_system::debug::_Icon::Stats_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_107_boot)
HXDLIN( 107)		watch =  ::flixel::_hx_system::debug::_Icon::Watch_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_108_boot)
HXDLIN( 108)		console =  ::flixel::_hx_system::debug::_Icon::Console_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_109_boot)
HXDLIN( 109)		arrowLeft =  ::flixel::_hx_system::debug::_Icon::ArrowLeft_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_110_boot)
HXDLIN( 110)		arrowRight =  ::flixel::_hx_system::debug::_Icon::ArrowRight_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_111_boot)
HXDLIN( 111)		close =  ::flixel::_hx_system::debug::_Icon::Close_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_112_boot)
HXDLIN( 112)		interactive =  ::flixel::_hx_system::debug::_Icon::Interactive_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_113_boot)
HXDLIN( 113)		windowHandle =  ::flixel::_hx_system::debug::_Icon::WindowHandle_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_114_boot)
HXDLIN( 114)		minimize =  ::flixel::_hx_system::debug::_Icon::Minimize_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_115_boot)
HXDLIN( 115)		maximize =  ::flixel::_hx_system::debug::_Icon::Maximize_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_116_boot)
HXDLIN( 116)		open =  ::flixel::_hx_system::debug::_Icon::Open_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_117_boot)
HXDLIN( 117)		pause =  ::flixel::_hx_system::debug::_Icon::Pause_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_118_boot)
HXDLIN( 118)		recordOff =  ::flixel::_hx_system::debug::_Icon::RecordOff_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_119_boot)
HXDLIN( 119)		recordOn =  ::flixel::_hx_system::debug::_Icon::RecordOn_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_120_boot)
HXDLIN( 120)		restart =  ::flixel::_hx_system::debug::_Icon::Restart_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_121_boot)
HXDLIN( 121)		step =  ::flixel::_hx_system::debug::_Icon::Step_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_a39e6ea060a41a51_122_boot)
HXDLIN( 122)		stop =  ::flixel::_hx_system::debug::_Icon::Stop_obj::__alloc( HX_CTX ,11,11,null(),null());
            	}
}

} // end namespace flixel
} // end namespace system
} // end namespace debug
