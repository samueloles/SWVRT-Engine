// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_flixel_system_debug_interaction_tools__Transform_TransformAction
#include <flixel/system/debug/interaction/tools/_Transform/TransformAction.h>
#endif
namespace flixel{
namespace _hx_system{
namespace debug{
namespace interaction{
namespace tools{
namespace _Transform{

::flixel::_hx_system::debug::interaction::tools::_Transform::TransformAction TransformAction_obj::SET_ANGLE(Float start)
{
	return ::hx::CreateEnum< TransformAction_obj >(HX_("SET_ANGLE",f6,87,a0,10),0,1)->_hx_init(0,start);
}

::flixel::_hx_system::debug::interaction::tools::_Transform::TransformAction TransformAction_obj::SET_SCALE_X(Float start)
{
	return ::hx::CreateEnum< TransformAction_obj >(HX_("SET_SCALE_X",06,2b,f9,f1),1,1)->_hx_init(0,start);
}

::flixel::_hx_system::debug::interaction::tools::_Transform::TransformAction TransformAction_obj::SET_SCALE_XY(Float startX,Float startY)
{
	return ::hx::CreateEnum< TransformAction_obj >(HX_("SET_SCALE_XY",93,7a,0c,c8),3,2)->_hx_init(0,startX)->_hx_init(1,startY);
}

::flixel::_hx_system::debug::interaction::tools::_Transform::TransformAction TransformAction_obj::SET_SCALE_Y(Float start)
{
	return ::hx::CreateEnum< TransformAction_obj >(HX_("SET_SCALE_Y",07,2b,f9,f1),2,1)->_hx_init(0,start);
}

bool TransformAction_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("SET_ANGLE",f6,87,a0,10)) { outValue = TransformAction_obj::SET_ANGLE_dyn(); return true; }
	if (inName==HX_("SET_SCALE_X",06,2b,f9,f1)) { outValue = TransformAction_obj::SET_SCALE_X_dyn(); return true; }
	if (inName==HX_("SET_SCALE_XY",93,7a,0c,c8)) { outValue = TransformAction_obj::SET_SCALE_XY_dyn(); return true; }
	if (inName==HX_("SET_SCALE_Y",07,2b,f9,f1)) { outValue = TransformAction_obj::SET_SCALE_Y_dyn(); return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(TransformAction_obj)

int TransformAction_obj::__FindIndex(::String inName)
{
	if (inName==HX_("SET_ANGLE",f6,87,a0,10)) return 0;
	if (inName==HX_("SET_SCALE_X",06,2b,f9,f1)) return 1;
	if (inName==HX_("SET_SCALE_XY",93,7a,0c,c8)) return 3;
	if (inName==HX_("SET_SCALE_Y",07,2b,f9,f1)) return 2;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC1(TransformAction_obj,SET_ANGLE,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(TransformAction_obj,SET_SCALE_X,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC2(TransformAction_obj,SET_SCALE_XY,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(TransformAction_obj,SET_SCALE_Y,return)

int TransformAction_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("SET_ANGLE",f6,87,a0,10)) return 1;
	if (inName==HX_("SET_SCALE_X",06,2b,f9,f1)) return 1;
	if (inName==HX_("SET_SCALE_XY",93,7a,0c,c8)) return 2;
	if (inName==HX_("SET_SCALE_Y",07,2b,f9,f1)) return 1;
	return super::__FindArgCount(inName);
}

::hx::Val TransformAction_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("SET_ANGLE",f6,87,a0,10)) return SET_ANGLE_dyn();
	if (inName==HX_("SET_SCALE_X",06,2b,f9,f1)) return SET_SCALE_X_dyn();
	if (inName==HX_("SET_SCALE_XY",93,7a,0c,c8)) return SET_SCALE_XY_dyn();
	if (inName==HX_("SET_SCALE_Y",07,2b,f9,f1)) return SET_SCALE_Y_dyn();
	return super::__Field(inName,inCallProp);
}

static ::String TransformAction_obj_sStaticFields[] = {
	HX_("SET_ANGLE",f6,87,a0,10),
	HX_("SET_SCALE_X",06,2b,f9,f1),
	HX_("SET_SCALE_Y",07,2b,f9,f1),
	HX_("SET_SCALE_XY",93,7a,0c,c8),
	::String(null())
};

::hx::Class TransformAction_obj::__mClass;

Dynamic __Create_TransformAction_obj() { return new TransformAction_obj; }

void TransformAction_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("flixel.system.debug.interaction.tools._Transform.TransformAction",d8,72,7d,ab), ::hx::TCanCast< TransformAction_obj >,TransformAction_obj_sStaticFields,0,
	&__Create_TransformAction_obj, &__Create,
	&super::__SGetClass(), &CreateTransformAction_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &TransformAction_obj::__GetStatic;
}

void TransformAction_obj::__boot()
{
}


} // end namespace flixel
} // end namespace system
} // end namespace debug
} // end namespace interaction
} // end namespace tools
} // end namespace _Transform
