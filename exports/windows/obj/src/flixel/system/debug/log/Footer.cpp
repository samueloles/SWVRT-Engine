// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_flixel_system_debug_DebuggerUtil
#include <flixel/system/debug/DebuggerUtil.h>
#endif
#ifndef INCLUDED_flixel_system_debug_log_Footer
#include <flixel/system/debug/log/Footer.h>
#endif
#ifndef INCLUDED_flixel_util_FlxStringUtil
#include <flixel/util/FlxStringUtil.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_Graphics
#include <openfl/display/Graphics.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Shape
#include <openfl/display/Shape.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_text_TextField
#include <openfl/text/TextField.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_6ec0a830eaa78d13_397_new,"flixel.system.debug.log.Footer","new",0xf9478b5f,"flixel.system.debug.log.Footer.new","flixel/system/debug/log/BitmapLog.hx",397,0x69d60e7d)
HX_LOCAL_STACK_FRAME(_hx_pos_6ec0a830eaa78d13_415_setText,"flixel.system.debug.log.Footer","setText",0x5c04b3ee,"flixel.system.debug.log.Footer.setText","flixel/system/debug/log/BitmapLog.hx",415,0x69d60e7d)
HX_LOCAL_STACK_FRAME(_hx_pos_6ec0a830eaa78d13_423_resize,"flixel.system.debug.log.Footer","resize",0x83a54855,"flixel.system.debug.log.Footer.resize","flixel/system/debug/log/BitmapLog.hx",423,0x69d60e7d)
HX_LOCAL_STACK_FRAME(_hx_pos_6ec0a830eaa78d13_427_getHeight,"flixel.system.debug.log.Footer","getHeight",0x33ff155c,"flixel.system.debug.log.Footer.getHeight","flixel/system/debug/log/BitmapLog.hx",427,0x69d60e7d)
namespace flixel{
namespace _hx_system{
namespace debug{
namespace log{

void Footer_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_6ec0a830eaa78d13_397_new)
HXLINE( 400)		this->text =  ::openfl::text::TextField_obj::__alloc( HX_CTX );
HXLINE( 399)		this->bg =  ::openfl::display::Shape_obj::__alloc( HX_CTX );
HXLINE( 404)		super::__construct();
HXLINE( 405)		this->bg->get_graphics()->beginFill((int)-1157627904,null());
HXLINE( 406)		this->bg->get_graphics()->drawRect(( (Float)(0) ),( (Float)(0) ),( (Float)(1) ),( (Float)(15) ));
HXLINE( 407)		this->bg->set_alpha(((Float)0.8));
HXLINE( 408)		this->addChild(this->bg);
HXLINE( 410)		this->text = ::flixel::_hx_system::debug::DebuggerUtil_obj::createTextField(0,-1,null(),null());
HXLINE( 411)		this->addChild(this->text);
            	}

Dynamic Footer_obj::__CreateEmpty() { return new Footer_obj; }

void *Footer_obj::_hx_vtable = 0;

Dynamic Footer_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Footer_obj > _hx_result = new Footer_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Footer_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x17d4c07b) {
		if (inClassId<=(int)0x0c89e854) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x0c89e854;
			}
		} else {
			return inClassId==(int)0x17d4c07b;
		}
	} else {
		if (inClassId<=(int)0x4af7dd8e) {
			return inClassId==(int)0x1f4df417 || inClassId==(int)0x4af7dd8e;
		} else {
			return inClassId==(int)0x6b353933;
		}
	}
}

void Footer_obj::setText( ::Dynamic entry){
            	HX_STACKFRAME(&_hx_pos_6ec0a830eaa78d13_415_setText)
HXLINE( 416)		 ::openfl::text::TextField _hx_tmp = this->text;
HXDLIN( 416)		::String _hx_tmp1;
HXDLIN( 416)		if (::hx::IsEq( entry->__Field(HX_("name",4b,72,ff,48),::hx::paccDynamic),HX_("",00,00,00,00) )) {
HXLINE( 416)			_hx_tmp1 = HX_("",00,00,00,00);
            		}
            		else {
HXLINE( 416)			::String _hx_tmp2 = ( (::String)(((HX_("\"",22,00,00,00) + entry->__Field(HX_("name",4b,72,ff,48),::hx::paccDynamic)) + HX_("\" | ",62,f5,91,16))) );
HXLINE( 417)			 ::openfl::display::BitmapData bitmapData = ( ( ::openfl::display::BitmapData)(entry->__Field(HX_("bitmap",ef,0f,0c,f1),::hx::paccDynamic)) );
HXLINE( 416)			_hx_tmp1 = (_hx_tmp2 + ::flixel::util::FlxStringUtil_obj::formatBytes(( (Float)(((bitmapData->width * bitmapData->height) * 4)) ),null()));
            		}
HXDLIN( 416)		_hx_tmp->set_text(_hx_tmp1);
HXLINE( 418)		 ::openfl::text::TextField _hx_tmp3 = this->text;
HXDLIN( 418)		Float _hx_tmp4 = this->bg->get_width();
HXDLIN( 418)		_hx_tmp3->set_x(((_hx_tmp4 - this->text->get_width()) / ( (Float)(2) )));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Footer_obj,setText,(void))

void Footer_obj::resize(Float width){
            	HX_STACKFRAME(&_hx_pos_6ec0a830eaa78d13_423_resize)
HXDLIN( 423)		this->bg->set_width(width);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Footer_obj,resize,(void))

int Footer_obj::getHeight(){
            	HX_STACKFRAME(&_hx_pos_6ec0a830eaa78d13_427_getHeight)
HXDLIN( 427)		return 15;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Footer_obj,getHeight,return )


::hx::ObjectPtr< Footer_obj > Footer_obj::__new() {
	::hx::ObjectPtr< Footer_obj > __this = new Footer_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< Footer_obj > Footer_obj::__alloc(::hx::Ctx *_hx_ctx) {
	Footer_obj *__this = (Footer_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Footer_obj), true, "flixel.system.debug.log.Footer"));
	*(void **)__this = Footer_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Footer_obj::Footer_obj()
{
}

void Footer_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Footer);
	HX_MARK_MEMBER_NAME(bg,"bg");
	HX_MARK_MEMBER_NAME(text,"text");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Footer_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(bg,"bg");
	HX_VISIT_MEMBER_NAME(text,"text");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val Footer_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"bg") ) { return ::hx::Val( bg ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"text") ) { return ::hx::Val( text ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"resize") ) { return ::hx::Val( resize_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"setText") ) { return ::hx::Val( setText_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getHeight") ) { return ::hx::Val( getHeight_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Footer_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"bg") ) { bg=inValue.Cast<  ::openfl::display::Shape >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"text") ) { text=inValue.Cast<  ::openfl::text::TextField >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Footer_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("bg",c5,55,00,00));
	outFields->push(HX_("text",ad,cc,f9,4c));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Footer_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::openfl::display::Shape */ ,(int)offsetof(Footer_obj,bg),HX_("bg",c5,55,00,00)},
	{::hx::fsObject /*  ::openfl::text::TextField */ ,(int)offsetof(Footer_obj,text),HX_("text",ad,cc,f9,4c)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Footer_obj_sStaticStorageInfo = 0;
#endif

static ::String Footer_obj_sMemberFields[] = {
	HX_("bg",c5,55,00,00),
	HX_("text",ad,cc,f9,4c),
	HX_("setText",6f,0d,7e,12),
	HX_("resize",f4,59,7b,08),
	HX_("getHeight",1d,91,a2,7e),
	::String(null()) };

::hx::Class Footer_obj::__mClass;

void Footer_obj::__register()
{
	Footer_obj _hx_dummy;
	Footer_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.system.debug.log.Footer",ed,ef,f0,e7);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Footer_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Footer_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Footer_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Footer_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace system
} // end namespace debug
} // end namespace log
