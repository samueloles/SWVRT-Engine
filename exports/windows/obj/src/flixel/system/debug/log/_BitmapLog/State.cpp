// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_flixel_system_debug_log__BitmapLog_State
#include <flixel/system/debug/log/_BitmapLog/State.h>
#endif
namespace flixel{
namespace _hx_system{
namespace debug{
namespace log{
namespace _BitmapLog{

::flixel::_hx_system::debug::log::_BitmapLog::State State_obj::DRAG(Float startX,Float startY,Float offsetStartX,Float offsetStartY)
{
	return ::hx::CreateEnum< State_obj >(HX_("DRAG",f4,f3,30,2d),1,4)->_hx_init(0,startX)->_hx_init(1,startY)->_hx_init(2,offsetStartX)->_hx_init(3,offsetStartY);
}

::flixel::_hx_system::debug::log::_BitmapLog::State State_obj::IDLE;

bool State_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("DRAG",f4,f3,30,2d)) { outValue = State_obj::DRAG_dyn(); return true; }
	if (inName==HX_("IDLE",14,6f,74,30)) { outValue = State_obj::IDLE; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(State_obj)

int State_obj::__FindIndex(::String inName)
{
	if (inName==HX_("DRAG",f4,f3,30,2d)) return 1;
	if (inName==HX_("IDLE",14,6f,74,30)) return 0;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC4(State_obj,DRAG,return)

int State_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("DRAG",f4,f3,30,2d)) return 4;
	if (inName==HX_("IDLE",14,6f,74,30)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val State_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("DRAG",f4,f3,30,2d)) return DRAG_dyn();
	if (inName==HX_("IDLE",14,6f,74,30)) return IDLE;
	return super::__Field(inName,inCallProp);
}

static ::String State_obj_sStaticFields[] = {
	HX_("IDLE",14,6f,74,30),
	HX_("DRAG",f4,f3,30,2d),
	::String(null())
};

::hx::Class State_obj::__mClass;

Dynamic __Create_State_obj() { return new State_obj; }

void State_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("flixel.system.debug.log._BitmapLog.State",ab,a2,7f,1e), ::hx::TCanCast< State_obj >,State_obj_sStaticFields,0,
	&__Create_State_obj, &__Create,
	&super::__SGetClass(), &CreateState_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &State_obj::__GetStatic;
}

void State_obj::__boot()
{
IDLE = ::hx::CreateConstEnum< State_obj >(HX_("IDLE",14,6f,74,30),0);
}


} // end namespace flixel
} // end namespace system
} // end namespace debug
} // end namespace log
} // end namespace _BitmapLog
