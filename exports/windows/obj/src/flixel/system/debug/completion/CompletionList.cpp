// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_EReg
#include <EReg.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_flixel_system_debug_completion_CompletionList
#include <flixel/system/debug/completion/CompletionList.h>
#endif
#ifndef INCLUDED_flixel_system_debug_completion_CompletionListEntry
#include <flixel/system/debug/completion/CompletionListEntry.h>
#endif
#ifndef INCLUDED_flixel_system_debug_completion_CompletionListScrollBar
#include <flixel/system/debug/completion/CompletionListScrollBar.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_KeyboardEvent
#include <openfl/events/KeyboardEvent.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_26f69c8799845277_11_new,"flixel.system.debug.completion.CompletionList","new",0x2d62f836,"flixel.system.debug.completion.CompletionList.new","flixel/system/debug/completion/CompletionList.hx",11,0x5d64787a)
HX_LOCAL_STACK_FRAME(_hx_pos_26f69c8799845277_43_show,"flixel.system.debug.completion.CompletionList","show",0x8c868867,"flixel.system.debug.completion.CompletionList.show","flixel/system/debug/completion/CompletionList.hx",43,0x5d64787a)
HX_LOCAL_STACK_FRAME(_hx_pos_26f69c8799845277_54_setY,"flixel.system.debug.completion.CompletionList","setY",0x8c8445e1,"flixel.system.debug.completion.CompletionList.setY","flixel/system/debug/completion/CompletionList.hx",54,0x5d64787a)
HX_LOCAL_STACK_FRAME(_hx_pos_26f69c8799845277_58_close,"flixel.system.debug.completion.CompletionList","close",0x356c610e,"flixel.system.debug.completion.CompletionList.close","flixel/system/debug/completion/CompletionList.hx",58,0x5d64787a)
HX_LOCAL_STACK_FRAME(_hx_pos_26f69c8799845277_68_createPopupEntries,"flixel.system.debug.completion.CompletionList","createPopupEntries",0x28517e8a,"flixel.system.debug.completion.CompletionList.createPopupEntries","flixel/system/debug/completion/CompletionList.hx",68,0x5d64787a)
HX_LOCAL_STACK_FRAME(_hx_pos_26f69c8799845277_78_createScrollBar,"flixel.system.debug.completion.CompletionList","createScrollBar",0x8887a200,"flixel.system.debug.completion.CompletionList.createScrollBar","flixel/system/debug/completion/CompletionList.hx",78,0x5d64787a)
HX_LOCAL_STACK_FRAME(_hx_pos_26f69c8799845277_84_onKeyDown,"flixel.system.debug.completion.CompletionList","onKeyDown",0xde49ce98,"flixel.system.debug.completion.CompletionList.onKeyDown","flixel/system/debug/completion/CompletionList.hx",84,0x5d64787a)
HX_LOCAL_STACK_FRAME(_hx_pos_26f69c8799845277_111_updateIndices,"flixel.system.debug.completion.CompletionList","updateIndices",0x00d63b74,"flixel.system.debug.completion.CompletionList.updateIndices","flixel/system/debug/completion/CompletionList.hx",111,0x5d64787a)
HX_LOCAL_STACK_FRAME(_hx_pos_26f69c8799845277_133_bound,"flixel.system.debug.completion.CompletionList","bound",0xa405f994,"flixel.system.debug.completion.CompletionList.bound","flixel/system/debug/completion/CompletionList.hx",133,0x5d64787a)
HX_LOCAL_STACK_FRAME(_hx_pos_26f69c8799845277_137_updateEntries,"flixel.system.debug.completion.CompletionList","updateEntries",0x96e1219d,"flixel.system.debug.completion.CompletionList.updateEntries","flixel/system/debug/completion/CompletionList.hx",137,0x5d64787a)
HX_LOCAL_STACK_FRAME(_hx_pos_26f69c8799845277_145_updateLabels,"flixel.system.debug.completion.CompletionList","updateLabels",0x98d4fc52,"flixel.system.debug.completion.CompletionList.updateLabels","flixel/system/debug/completion/CompletionList.hx",145,0x5d64787a)
HX_LOCAL_STACK_FRAME(_hx_pos_26f69c8799845277_155_updateSelectedItem,"flixel.system.debug.completion.CompletionList","updateSelectedItem",0x02be39a1,"flixel.system.debug.completion.CompletionList.updateSelectedItem","flixel/system/debug/completion/CompletionList.hx",155,0x5d64787a)
HX_LOCAL_STACK_FRAME(_hx_pos_26f69c8799845277_165_setItems,"flixel.system.debug.completion.CompletionList","setItems",0x6843c568,"flixel.system.debug.completion.CompletionList.setItems","flixel/system/debug/completion/CompletionList.hx",165,0x5d64787a)
HX_LOCAL_STACK_FRAME(_hx_pos_26f69c8799845277_180_filterItems,"flixel.system.debug.completion.CompletionList","filterItems",0xe29aeefe,"flixel.system.debug.completion.CompletionList.filterItems","flixel/system/debug/completion/CompletionList.hx",180,0x5d64787a)
HX_LOCAL_STACK_FRAME(_hx_pos_26f69c8799845277_201_sortItems,"flixel.system.debug.completion.CompletionList","sortItems",0x34d82c18,"flixel.system.debug.completion.CompletionList.sortItems","flixel/system/debug/completion/CompletionList.hx",201,0x5d64787a)
HX_LOCAL_STACK_FRAME(_hx_pos_26f69c8799845277_196_sortItems,"flixel.system.debug.completion.CompletionList","sortItems",0x34d82c18,"flixel.system.debug.completion.CompletionList.sortItems","flixel/system/debug/completion/CompletionList.hx",196,0x5d64787a)
HX_LOCAL_STACK_FRAME(_hx_pos_26f69c8799845277_220_startsWithExt,"flixel.system.debug.completion.CompletionList","startsWithExt",0x5b78f7c0,"flixel.system.debug.completion.CompletionList.startsWithExt","flixel/system/debug/completion/CompletionList.hx",220,0x5d64787a)
HX_LOCAL_STACK_FRAME(_hx_pos_26f69c8799845277_229_set_filter,"flixel.system.debug.completion.CompletionList","set_filter",0x1b994cdf,"flixel.system.debug.completion.CompletionList.set_filter","flixel/system/debug/completion/CompletionList.hx",229,0x5d64787a)
namespace flixel{
namespace _hx_system{
namespace debug{
namespace completion{

void CompletionList_obj::__construct(int capacity){
            	HX_STACKFRAME(&_hx_pos_26f69c8799845277_11_new)
HXLINE(  25)		this->upperVisibleIndex = 0;
HXLINE(  24)		this->lowerVisibleIndex = 0;
HXLINE(  23)		this->selectedIndex = 0;
HXLINE(  21)		this->entries = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  31)		super::__construct();
HXLINE(  33)		this->set_visible(false);
HXLINE(  34)		this->upperVisibleIndex = (capacity - 1);
HXLINE(  35)		this->actualHeight = (capacity * 20);
HXLINE(  37)		this->createPopupEntries(capacity);
HXLINE(  38)		this->createScrollBar();
HXLINE(  39)		this->updateSelectedItem();
            	}

Dynamic CompletionList_obj::__CreateEmpty() { return new CompletionList_obj; }

void *CompletionList_obj::_hx_vtable = 0;

Dynamic CompletionList_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< CompletionList_obj > _hx_result = new CompletionList_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool CompletionList_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1f4df417) {
		if (inClassId<=(int)0x0c89e854) {
			if (inClassId<=(int)0x0330636f) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0330636f;
			} else {
				return inClassId==(int)0x0c89e854;
			}
		} else {
			return inClassId==(int)0x1f4df417;
		}
	} else {
		if (inClassId<=(int)0x6b353933) {
			return inClassId==(int)0x4af7dd8e || inClassId==(int)0x6b353933;
		} else {
			return inClassId==(int)0x6d9b049a;
		}
	}
}

void CompletionList_obj::show(Float x,::Array< ::String > items){
            	HX_STACKFRAME(&_hx_pos_26f69c8799845277_43_show)
HXLINE(  44)		this->set_visible(true);
HXLINE(  45)		this->set_x(x);
HXLINE(  46)		this->originalItems = items;
HXLINE(  47)		this->set_filter(HX_("",00,00,00,00));
HXLINE(  49)		this->updateEntries();
            	}


HX_DEFINE_DYNAMIC_FUNC2(CompletionList_obj,show,(void))

void CompletionList_obj::setY(Float y){
            	HX_STACKFRAME(&_hx_pos_26f69c8799845277_54_setY)
HXDLIN(  54)		this->set_y((y - ( (Float)(this->actualHeight) )));
            	}


HX_DEFINE_DYNAMIC_FUNC1(CompletionList_obj,setY,(void))

void CompletionList_obj::close(){
            	HX_STACKFRAME(&_hx_pos_26f69c8799845277_58_close)
HXLINE(  59)		this->set_visible(false);
HXLINE(  60)		this->set_filter(null());
HXLINE(  62)		if (::hx::IsNotNull( this->closed )) {
HXLINE(  63)			this->closed();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(CompletionList_obj,close,(void))

void CompletionList_obj::createPopupEntries(int amount){
            	HX_GC_STACKFRAME(&_hx_pos_26f69c8799845277_68_createPopupEntries)
HXDLIN(  68)		int _g = 0;
HXDLIN(  68)		int _g1 = amount;
HXDLIN(  68)		while((_g < _g1)){
HXDLIN(  68)			_g = (_g + 1);
HXDLIN(  68)			int i = (_g - 1);
HXLINE(  70)			 ::flixel::_hx_system::debug::completion::CompletionListEntry entry =  ::flixel::_hx_system::debug::completion::CompletionListEntry_obj::__alloc( HX_CTX );
HXLINE(  71)			this->entries->push(entry);
HXLINE(  72)			this->addChild(entry);
HXLINE(  73)			entry->set_y(( (Float)((20 * i)) ));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(CompletionList_obj,createPopupEntries,(void))

void CompletionList_obj::createScrollBar(){
            	HX_GC_STACKFRAME(&_hx_pos_26f69c8799845277_78_createScrollBar)
HXLINE(  79)		this->scrollBar =  ::flixel::_hx_system::debug::completion::CompletionListScrollBar_obj::__alloc( HX_CTX ,150,0,5,this->actualHeight);
HXLINE(  80)		this->addChild(this->scrollBar);
            	}


HX_DEFINE_DYNAMIC_FUNC0(CompletionList_obj,createScrollBar,(void))

void CompletionList_obj::onKeyDown( ::openfl::events::KeyboardEvent e){
            	HX_STACKFRAME(&_hx_pos_26f69c8799845277_84_onKeyDown)
HXLINE(  85)		if (!(this->get_visible())) {
HXLINE(  86)			return;
            		}
HXLINE(  88)		switch((int)(e->keyCode)){
            			case (int)9: case (int)13: {
HXLINE(  97)				if (::hx::IsNotNull( this->completed )) {
HXLINE(  98)					this->completed(this->items->__get(this->selectedIndex));
            				}
HXLINE(  99)				this->close();
HXLINE( 100)				return;
            			}
            			break;
            			case (int)27: {
HXLINE( 103)				this->close();
HXLINE( 104)				return;
            			}
            			break;
            			case (int)38: {
HXLINE(  94)				this->updateIndices(-1);
            			}
            			break;
            			case (int)40: {
HXLINE(  91)				this->updateIndices(1);
            			}
            			break;
            		}
HXLINE( 107)		this->updateEntries();
            	}


HX_DEFINE_DYNAMIC_FUNC1(CompletionList_obj,onKeyDown,(void))

void CompletionList_obj::updateIndices(int modifier){
            	HX_STACKFRAME(&_hx_pos_26f69c8799845277_111_updateIndices)
HXLINE( 112)		this->selectedIndex = this->bound((this->selectedIndex + modifier));
HXLINE( 113)		Float Value = ( (Float)(this->selectedIndex) );
HXDLIN( 113)		 ::Dynamic Min = this->lowerVisibleIndex;
HXDLIN( 113)		 ::Dynamic Max = this->upperVisibleIndex;
HXDLIN( 113)		bool _hx_tmp;
HXDLIN( 113)		bool _hx_tmp1;
HXDLIN( 113)		if (::hx::IsNotNull( Min )) {
HXLINE( 113)			_hx_tmp1 = ::hx::IsGreaterEq( Value,Min );
            		}
            		else {
HXLINE( 113)			_hx_tmp1 = true;
            		}
HXDLIN( 113)		if (_hx_tmp1) {
HXLINE( 113)			if (::hx::IsNotNull( Max )) {
HXLINE( 113)				_hx_tmp = ::hx::IsLessEq( Value,Max );
            			}
            			else {
HXLINE( 113)				_hx_tmp = true;
            			}
            		}
            		else {
HXLINE( 113)			_hx_tmp = false;
            		}
HXDLIN( 113)		if (_hx_tmp) {
HXLINE( 114)			return;
            		}
HXLINE( 117)		this->lowerVisibleIndex = this->bound((this->lowerVisibleIndex + modifier));
HXLINE( 118)		this->upperVisibleIndex = this->bound((this->upperVisibleIndex + modifier));
HXLINE( 119)		int range = (this->upperVisibleIndex - this->lowerVisibleIndex);
HXLINE( 121)		if ((range == this->items->length)) {
HXLINE( 122)			return;
            		}
HXLINE( 125)		if ((this->lowerVisibleIndex == 0)) {
HXLINE( 126)			this->upperVisibleIndex = (this->entries->length - 1);
            		}
            		else {
HXLINE( 127)			if ((this->upperVisibleIndex == (this->items->length - 1))) {
HXLINE( 128)				this->lowerVisibleIndex = (this->items->length - this->entries->length);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(CompletionList_obj,updateIndices,(void))

int CompletionList_obj::bound(int index){
            	HX_STACKFRAME(&_hx_pos_26f69c8799845277_133_bound)
HXDLIN( 133)		 ::Dynamic Max = (this->items->length - 1);
HXDLIN( 133)		Float lowerBound;
HXDLIN( 133)		if ((index < 0)) {
HXDLIN( 133)			lowerBound = ( (Float)(0) );
            		}
            		else {
HXDLIN( 133)			lowerBound = ( (Float)(index) );
            		}
HXDLIN( 133)		Float _hx_tmp;
HXDLIN( 133)		bool _hx_tmp1;
HXDLIN( 133)		if (::hx::IsNotNull( Max )) {
HXDLIN( 133)			_hx_tmp1 = ::hx::IsGreater( lowerBound,Max );
            		}
            		else {
HXDLIN( 133)			_hx_tmp1 = false;
            		}
HXDLIN( 133)		if (_hx_tmp1) {
HXDLIN( 133)			_hx_tmp = ( (Float)(Max) );
            		}
            		else {
HXDLIN( 133)			_hx_tmp = lowerBound;
            		}
HXDLIN( 133)		return ::Std_obj::_hx_int(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(CompletionList_obj,bound,return )

void CompletionList_obj::updateEntries(){
            	HX_STACKFRAME(&_hx_pos_26f69c8799845277_137_updateEntries)
HXLINE( 138)		this->updateLabels();
HXLINE( 139)		this->updateSelectedItem();
HXLINE( 140)		this->scrollBar->updateHandle(this->lowerVisibleIndex,this->items->length,this->entries->length);
            	}


HX_DEFINE_DYNAMIC_FUNC0(CompletionList_obj,updateEntries,(void))

void CompletionList_obj::updateLabels(){
            	HX_STACKFRAME(&_hx_pos_26f69c8799845277_145_updateLabels)
HXDLIN( 145)		int _g = 0;
HXDLIN( 145)		int _g1 = this->entries->length;
HXDLIN( 145)		while((_g < _g1)){
HXDLIN( 145)			_g = (_g + 1);
HXDLIN( 145)			int i = (_g - 1);
HXLINE( 147)			::String selectedItem = this->items->__get((this->lowerVisibleIndex + i));
HXLINE( 148)			if (::hx::IsNull( selectedItem )) {
HXLINE( 149)				selectedItem = HX_("",00,00,00,00);
            			}
HXLINE( 150)			this->entries->__get(i).StaticCast<  ::flixel::_hx_system::debug::completion::CompletionListEntry >()->setItem(selectedItem);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(CompletionList_obj,updateLabels,(void))

void CompletionList_obj::updateSelectedItem(){
            	HX_STACKFRAME(&_hx_pos_26f69c8799845277_155_updateSelectedItem)
HXLINE( 156)		{
HXLINE( 156)			int _g = 0;
HXDLIN( 156)			::Array< ::Dynamic> _g1 = this->entries;
HXDLIN( 156)			while((_g < _g1->length)){
HXLINE( 156)				 ::flixel::_hx_system::debug::completion::CompletionListEntry entry = _g1->__get(_g).StaticCast<  ::flixel::_hx_system::debug::completion::CompletionListEntry >();
HXDLIN( 156)				_g = (_g + 1);
HXLINE( 157)				entry->set_selected(false);
            			}
            		}
HXLINE( 158)		this->entries->__get((this->selectedIndex - this->lowerVisibleIndex)).StaticCast<  ::flixel::_hx_system::debug::completion::CompletionListEntry >()->set_selected(true);
HXLINE( 160)		if (::hx::IsNotNull( this->selectionChanged )) {
HXLINE( 161)			this->selectionChanged(this->items->__get(this->selectedIndex));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(CompletionList_obj,updateSelectedItem,(void))

void CompletionList_obj::setItems(::Array< ::String > items){
            	HX_STACKFRAME(&_hx_pos_26f69c8799845277_165_setItems)
HXLINE( 166)		if (::hx::IsNull( items )) {
HXLINE( 167)			return;
            		}
HXLINE( 168)		if ((items->length == 0)) {
HXLINE( 169)			this->close();
            		}
HXLINE( 171)		this->items = items;
HXLINE( 173)		this->selectedIndex = 0;
HXLINE( 174)		this->lowerVisibleIndex = 0;
HXLINE( 175)		this->upperVisibleIndex = (this->entries->length - 1);
HXLINE( 176)		this->updateEntries();
            	}


HX_DEFINE_DYNAMIC_FUNC1(CompletionList_obj,setItems,(void))

::Array< ::String > CompletionList_obj::filterItems(::String filter){
            	HX_STACKFRAME(&_hx_pos_26f69c8799845277_180_filterItems)
HXLINE( 181)		if (::hx::IsNull( filter )) {
HXLINE( 182)			filter = HX_("",00,00,00,00);
            		}
HXLINE( 184)		::Array< ::String > _g = ::Array_obj< ::String >::__new(0);
HXDLIN( 184)		{
HXLINE( 184)			int _g1 = 0;
HXDLIN( 184)			::Array< ::String > _g2 = this->originalItems;
HXDLIN( 184)			while((_g1 < _g2->length)){
HXLINE( 184)				::String v = _g2->__get(_g1);
HXDLIN( 184)				_g1 = (_g1 + 1);
HXLINE( 186)				::String s = v.toLowerCase();
HXLINE( 184)				if ((s.indexOf(filter.toLowerCase(),null()) != -1)) {
HXLINE( 184)					_g->push(v);
            				}
            			}
            		}
HXDLIN( 184)		return this->sortItems(filter,_g);
            	}


HX_DEFINE_DYNAMIC_FUNC1(CompletionList_obj,filterItems,return )

::Array< ::String > CompletionList_obj::sortItems(::String filter,::Array< ::String > items){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0, ::flixel::_hx_system::debug::completion::CompletionList,_gthis,::String,filter) HXARGC(2)
            		int _hx_run(::String a,::String b){
            			HX_STACKFRAME(&_hx_pos_26f69c8799845277_201_sortItems)
HXLINE( 202)			int valueA = _gthis->startsWithExt(a,filter);
HXLINE( 203)			int valueB = _gthis->startsWithExt(b,filter);
HXLINE( 204)			if ((valueA > valueB)) {
HXLINE( 205)				return -(valueA);
            			}
HXLINE( 206)			if ((valueB > valueA)) {
HXLINE( 207)				return valueB;
            			}
HXLINE( 209)			if ((valueA == valueB)) {
HXLINE( 210)				return ::Std_obj::_hx_int(( (Float)((a.length - b.length)) ));
            			}
HXLINE( 211)			return 0;
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACKFRAME(&_hx_pos_26f69c8799845277_196_sortItems)
HXDLIN( 196)		 ::flixel::_hx_system::debug::completion::CompletionList _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 197)		if ((filter == HX_("",00,00,00,00))) {
HXLINE( 198)			return items;
            		}
HXLINE( 200)		items->sort( ::Dynamic(new _hx_Closure_0(_gthis,filter)));
HXLINE( 213)		return items;
            	}


HX_DEFINE_DYNAMIC_FUNC2(CompletionList_obj,sortItems,return )

int CompletionList_obj::startsWithExt(::String s,::String start){
            	HX_GC_STACKFRAME(&_hx_pos_26f69c8799845277_220_startsWithExt)
HXLINE( 221)		if (::StringTools_obj::startsWith(s,start)) {
HXLINE( 222)			return 2;
            		}
HXLINE( 223)		if (::StringTools_obj::startsWith( ::EReg_obj::__alloc( HX_CTX ,HX_("^[_]+",30,59,19,5c),HX_("",00,00,00,00))->replace(s,HX_("",00,00,00,00)),start)) {
HXLINE( 224)			return 1;
            		}
HXLINE( 225)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC2(CompletionList_obj,startsWithExt,return )

::String CompletionList_obj::set_filter(::String filter){
            	HX_STACKFRAME(&_hx_pos_26f69c8799845277_229_set_filter)
HXLINE( 230)		if ((filter == this->filter)) {
HXLINE( 231)			return filter;
            		}
HXLINE( 233)		this->setItems(this->filterItems(filter));
HXLINE( 234)		return (this->filter = filter);
            	}


HX_DEFINE_DYNAMIC_FUNC1(CompletionList_obj,set_filter,return )


::hx::ObjectPtr< CompletionList_obj > CompletionList_obj::__new(int capacity) {
	::hx::ObjectPtr< CompletionList_obj > __this = new CompletionList_obj();
	__this->__construct(capacity);
	return __this;
}

::hx::ObjectPtr< CompletionList_obj > CompletionList_obj::__alloc(::hx::Ctx *_hx_ctx,int capacity) {
	CompletionList_obj *__this = (CompletionList_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(CompletionList_obj), true, "flixel.system.debug.completion.CompletionList"));
	*(void **)__this = CompletionList_obj::_hx_vtable;
	__this->__construct(capacity);
	return __this;
}

CompletionList_obj::CompletionList_obj()
{
}

void CompletionList_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(CompletionList);
	HX_MARK_MEMBER_NAME(completed,"completed");
	HX_MARK_MEMBER_NAME(selectionChanged,"selectionChanged");
	HX_MARK_MEMBER_NAME(closed,"closed");
	HX_MARK_MEMBER_NAME(filter,"filter");
	HX_MARK_MEMBER_NAME(items,"items");
	HX_MARK_MEMBER_NAME(entries,"entries");
	HX_MARK_MEMBER_NAME(originalItems,"originalItems");
	HX_MARK_MEMBER_NAME(selectedIndex,"selectedIndex");
	HX_MARK_MEMBER_NAME(lowerVisibleIndex,"lowerVisibleIndex");
	HX_MARK_MEMBER_NAME(upperVisibleIndex,"upperVisibleIndex");
	HX_MARK_MEMBER_NAME(scrollBar,"scrollBar");
	HX_MARK_MEMBER_NAME(actualHeight,"actualHeight");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void CompletionList_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(completed,"completed");
	HX_VISIT_MEMBER_NAME(selectionChanged,"selectionChanged");
	HX_VISIT_MEMBER_NAME(closed,"closed");
	HX_VISIT_MEMBER_NAME(filter,"filter");
	HX_VISIT_MEMBER_NAME(items,"items");
	HX_VISIT_MEMBER_NAME(entries,"entries");
	HX_VISIT_MEMBER_NAME(originalItems,"originalItems");
	HX_VISIT_MEMBER_NAME(selectedIndex,"selectedIndex");
	HX_VISIT_MEMBER_NAME(lowerVisibleIndex,"lowerVisibleIndex");
	HX_VISIT_MEMBER_NAME(upperVisibleIndex,"upperVisibleIndex");
	HX_VISIT_MEMBER_NAME(scrollBar,"scrollBar");
	HX_VISIT_MEMBER_NAME(actualHeight,"actualHeight");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val CompletionList_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"show") ) { return ::hx::Val( show_dyn() ); }
		if (HX_FIELD_EQ(inName,"setY") ) { return ::hx::Val( setY_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"items") ) { return ::hx::Val( items ); }
		if (HX_FIELD_EQ(inName,"close") ) { return ::hx::Val( close_dyn() ); }
		if (HX_FIELD_EQ(inName,"bound") ) { return ::hx::Val( bound_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"closed") ) { return ::hx::Val( closed ); }
		if (HX_FIELD_EQ(inName,"filter") ) { return ::hx::Val( filter ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"entries") ) { return ::hx::Val( entries ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"setItems") ) { return ::hx::Val( setItems_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"completed") ) { return ::hx::Val( completed ); }
		if (HX_FIELD_EQ(inName,"scrollBar") ) { return ::hx::Val( scrollBar ); }
		if (HX_FIELD_EQ(inName,"onKeyDown") ) { return ::hx::Val( onKeyDown_dyn() ); }
		if (HX_FIELD_EQ(inName,"sortItems") ) { return ::hx::Val( sortItems_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"set_filter") ) { return ::hx::Val( set_filter_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"filterItems") ) { return ::hx::Val( filterItems_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"actualHeight") ) { return ::hx::Val( actualHeight ); }
		if (HX_FIELD_EQ(inName,"updateLabels") ) { return ::hx::Val( updateLabels_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"originalItems") ) { return ::hx::Val( originalItems ); }
		if (HX_FIELD_EQ(inName,"selectedIndex") ) { return ::hx::Val( selectedIndex ); }
		if (HX_FIELD_EQ(inName,"updateIndices") ) { return ::hx::Val( updateIndices_dyn() ); }
		if (HX_FIELD_EQ(inName,"updateEntries") ) { return ::hx::Val( updateEntries_dyn() ); }
		if (HX_FIELD_EQ(inName,"startsWithExt") ) { return ::hx::Val( startsWithExt_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"createScrollBar") ) { return ::hx::Val( createScrollBar_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"selectionChanged") ) { return ::hx::Val( selectionChanged ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"lowerVisibleIndex") ) { return ::hx::Val( lowerVisibleIndex ); }
		if (HX_FIELD_EQ(inName,"upperVisibleIndex") ) { return ::hx::Val( upperVisibleIndex ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"createPopupEntries") ) { return ::hx::Val( createPopupEntries_dyn() ); }
		if (HX_FIELD_EQ(inName,"updateSelectedItem") ) { return ::hx::Val( updateSelectedItem_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val CompletionList_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"items") ) { items=inValue.Cast< ::Array< ::String > >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"closed") ) { closed=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"filter") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( set_filter(inValue.Cast< ::String >()) );filter=inValue.Cast< ::String >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"entries") ) { entries=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"completed") ) { completed=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"scrollBar") ) { scrollBar=inValue.Cast<  ::flixel::_hx_system::debug::completion::CompletionListScrollBar >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"actualHeight") ) { actualHeight=inValue.Cast< int >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"originalItems") ) { originalItems=inValue.Cast< ::Array< ::String > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"selectedIndex") ) { selectedIndex=inValue.Cast< int >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"selectionChanged") ) { selectionChanged=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"lowerVisibleIndex") ) { lowerVisibleIndex=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"upperVisibleIndex") ) { upperVisibleIndex=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void CompletionList_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("filter",b8,1f,35,85));
	outFields->push(HX_("items",00,ac,0c,c2));
	outFields->push(HX_("entries",50,2d,5f,79));
	outFields->push(HX_("originalItems",ef,a1,fd,1c));
	outFields->push(HX_("selectedIndex",b7,76,56,b4));
	outFields->push(HX_("lowerVisibleIndex",e1,78,7b,b7));
	outFields->push(HX_("upperVisibleIndex",c2,a5,5c,06));
	outFields->push(HX_("scrollBar",c6,57,fc,3d));
	outFields->push(HX_("actualHeight",15,25,ab,b7));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo CompletionList_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(CompletionList_obj,completed),HX_("completed",8b,a1,38,4f)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(CompletionList_obj,selectionChanged),HX_("selectionChanged",08,c2,cb,3c)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(CompletionList_obj,closed),HX_("closed",ac,a9,51,0e)},
	{::hx::fsString,(int)offsetof(CompletionList_obj,filter),HX_("filter",b8,1f,35,85)},
	{::hx::fsObject /* ::Array< ::String > */ ,(int)offsetof(CompletionList_obj,items),HX_("items",00,ac,0c,c2)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(CompletionList_obj,entries),HX_("entries",50,2d,5f,79)},
	{::hx::fsObject /* ::Array< ::String > */ ,(int)offsetof(CompletionList_obj,originalItems),HX_("originalItems",ef,a1,fd,1c)},
	{::hx::fsInt,(int)offsetof(CompletionList_obj,selectedIndex),HX_("selectedIndex",b7,76,56,b4)},
	{::hx::fsInt,(int)offsetof(CompletionList_obj,lowerVisibleIndex),HX_("lowerVisibleIndex",e1,78,7b,b7)},
	{::hx::fsInt,(int)offsetof(CompletionList_obj,upperVisibleIndex),HX_("upperVisibleIndex",c2,a5,5c,06)},
	{::hx::fsObject /*  ::flixel::_hx_system::debug::completion::CompletionListScrollBar */ ,(int)offsetof(CompletionList_obj,scrollBar),HX_("scrollBar",c6,57,fc,3d)},
	{::hx::fsInt,(int)offsetof(CompletionList_obj,actualHeight),HX_("actualHeight",15,25,ab,b7)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *CompletionList_obj_sStaticStorageInfo = 0;
#endif

static ::String CompletionList_obj_sMemberFields[] = {
	HX_("completed",8b,a1,38,4f),
	HX_("selectionChanged",08,c2,cb,3c),
	HX_("closed",ac,a9,51,0e),
	HX_("filter",b8,1f,35,85),
	HX_("items",00,ac,0c,c2),
	HX_("entries",50,2d,5f,79),
	HX_("originalItems",ef,a1,fd,1c),
	HX_("selectedIndex",b7,76,56,b4),
	HX_("lowerVisibleIndex",e1,78,7b,b7),
	HX_("upperVisibleIndex",c2,a5,5c,06),
	HX_("scrollBar",c6,57,fc,3d),
	HX_("actualHeight",15,25,ab,b7),
	HX_("show",fd,d4,52,4c),
	HX_("setY",77,92,50,4c),
	HX_("close",b8,17,63,48),
	HX_("createPopupEntries",a0,65,fa,73),
	HX_("createScrollBar",2a,11,f1,de),
	HX_("onKeyDown",42,22,f2,73),
	HX_("updateIndices",1e,ac,c2,ae),
	HX_("bound",3e,b0,fc,b6),
	HX_("updateEntries",47,92,cd,44),
	HX_("updateLabels",e8,ce,40,49),
	HX_("updateSelectedItem",b7,20,67,4e),
	HX_("setItems",fe,14,41,d0),
	HX_("filterItems",28,01,bf,71),
	HX_("sortItems",c2,7f,80,ca),
	HX_("startsWithExt",6a,68,65,09),
	HX_("set_filter",f5,2d,3a,79),
	::String(null()) };

::hx::Class CompletionList_obj::__mClass;

void CompletionList_obj::__register()
{
	CompletionList_obj _hx_dummy;
	CompletionList_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.system.debug.completion.CompletionList",44,65,51,72);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(CompletionList_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< CompletionList_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CompletionList_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CompletionList_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace system
} // end namespace debug
} // end namespace completion
