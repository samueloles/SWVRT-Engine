// Generated by Haxe 4.3.7
#ifndef INCLUDED_states_debug_EditorMode
#define INCLUDED_states_debug_EditorMode

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(states,debug,EditorMode)
namespace states{
namespace debug{


class EditorMode_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef EditorMode_obj OBJ_;

	public:
		EditorMode_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("states.debug.EditorMode",b7,36,68,e4); }
		::String __ToString() const { return HX_("EditorMode.",5e,b6,ec,84) + _hx_tag; }

		static ::states::debug::EditorMode EDITAR;
		static inline ::states::debug::EditorMode EDITAR_dyn() { return EDITAR; }
		static ::states::debug::EditorMode MENU;
		static inline ::states::debug::EditorMode MENU_dyn() { return MENU; }
		static ::states::debug::EditorMode PROGRAMAR;
		static inline ::states::debug::EditorMode PROGRAMAR_dyn() { return PROGRAMAR; }
};

} // end namespace states
} // end namespace debug

#endif /* INCLUDED_states_debug_EditorMode */ 
