// Generated by Haxe 4.3.7
#ifndef INCLUDED_flixel_system_debug__ScrollSprite_ScrollState
#define INCLUDED_flixel_system_debug__ScrollSprite_ScrollState

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS4(flixel,_hx_system,debug,_ScrollSprite,ScrollState)
namespace flixel{
namespace _hx_system{
namespace debug{
namespace _ScrollSprite{


class ScrollState_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef ScrollState_obj OBJ_;

	public:
		ScrollState_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("flixel.system.debug._ScrollSprite.ScrollState",1f,74,eb,08); }
		::String __ToString() const { return HX_("ScrollState.",0a,79,d0,25) + _hx_tag; }

		static ::flixel::_hx_system::debug::_ScrollSprite::ScrollState DRAG_BG;
		static inline ::flixel::_hx_system::debug::_ScrollSprite::ScrollState DRAG_BG_dyn() { return DRAG_BG; }
		static ::flixel::_hx_system::debug::_ScrollSprite::ScrollState DRAG_HANDLE(Float offsetY);
		static ::Dynamic DRAG_HANDLE_dyn();
		static ::flixel::_hx_system::debug::_ScrollSprite::ScrollState IDLE;
		static inline ::flixel::_hx_system::debug::_ScrollSprite::ScrollState IDLE_dyn() { return IDLE; }
};

} // end namespace flixel
} // end namespace system
} // end namespace debug
} // end namespace _ScrollSprite

#endif /* INCLUDED_flixel_system_debug__ScrollSprite_ScrollState */ 
