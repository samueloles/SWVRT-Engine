// Generated by Haxe 4.3.7
#ifndef INCLUDED_flixel_system_debug_interaction_tools__Transform_TransformAction
#define INCLUDED_flixel_system_debug_interaction_tools__Transform_TransformAction

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS6(flixel,_hx_system,debug,interaction,tools,_Transform,TransformAction)
namespace flixel{
namespace _hx_system{
namespace debug{
namespace interaction{
namespace tools{
namespace _Transform{


class TransformAction_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef TransformAction_obj OBJ_;

	public:
		TransformAction_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("flixel.system.debug.interaction.tools._Transform.TransformAction",d8,72,7d,ab); }
		::String __ToString() const { return HX_("TransformAction.",cc,9f,9e,30) + _hx_tag; }

		static ::flixel::_hx_system::debug::interaction::tools::_Transform::TransformAction SET_ANGLE(Float start);
		static ::Dynamic SET_ANGLE_dyn();
		static ::flixel::_hx_system::debug::interaction::tools::_Transform::TransformAction SET_SCALE_X(Float start);
		static ::Dynamic SET_SCALE_X_dyn();
		static ::flixel::_hx_system::debug::interaction::tools::_Transform::TransformAction SET_SCALE_XY(Float startX,Float startY);
		static ::Dynamic SET_SCALE_XY_dyn();
		static ::flixel::_hx_system::debug::interaction::tools::_Transform::TransformAction SET_SCALE_Y(Float start);
		static ::Dynamic SET_SCALE_Y_dyn();
};

} // end namespace flixel
} // end namespace system
} // end namespace debug
} // end namespace interaction
} // end namespace tools
} // end namespace _Transform

#endif /* INCLUDED_flixel_system_debug_interaction_tools__Transform_TransformAction */ 
