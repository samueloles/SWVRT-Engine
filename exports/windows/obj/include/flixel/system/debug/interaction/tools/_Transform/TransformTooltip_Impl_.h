// Generated by Haxe 4.3.7
#ifndef INCLUDED_flixel_system_debug_interaction_tools__Transform_TransformTooltip_Impl_
#define INCLUDED_flixel_system_debug_interaction_tools__Transform_TransformTooltip_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(flixel,_hx_system,debug,TooltipOverlay)
HX_DECLARE_CLASS6(flixel,_hx_system,debug,interaction,tools,_Transform,TransformTooltip_Impl_)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)

namespace flixel{
namespace _hx_system{
namespace debug{
namespace interaction{
namespace tools{
namespace _Transform{


class HXCPP_CLASS_ATTRIBUTES TransformTooltip_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef TransformTooltip_Impl__obj OBJ_;
		TransformTooltip_Impl__obj();

	public:
		enum { _hx_ClassId = 0x6f2abfd1 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="flixel.system.debug.interaction.tools._Transform.TransformTooltip_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"flixel.system.debug.interaction.tools._Transform.TransformTooltip_Impl_"); }

		inline static ::hx::ObjectPtr< TransformTooltip_Impl__obj > __new() {
			::hx::ObjectPtr< TransformTooltip_Impl__obj > __this = new TransformTooltip_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< TransformTooltip_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			TransformTooltip_Impl__obj *__this = (TransformTooltip_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(TransformTooltip_Impl__obj), false, "flixel.system.debug.interaction.tools._Transform.TransformTooltip_Impl_"));
			*(void **)__this = TransformTooltip_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~TransformTooltip_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TransformTooltip_Impl_",f7,f0,90,77); }

		static  ::flixel::_hx_system::debug::TooltipOverlay _new();
		static ::Dynamic _new_dyn();

		static void show( ::flixel::_hx_system::debug::TooltipOverlay this1,Float x,Float y);
		static ::Dynamic show_dyn();

		static void hide( ::flixel::_hx_system::debug::TooltipOverlay this1);
		static ::Dynamic hide_dyn();

};

} // end namespace flixel
} // end namespace system
} // end namespace debug
} // end namespace interaction
} // end namespace tools
} // end namespace _Transform

#endif /* INCLUDED_flixel_system_debug_interaction_tools__Transform_TransformTooltip_Impl_ */ 
